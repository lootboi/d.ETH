{
	"id": "7ecf7db43d95561345098e3fae58b4e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Burna.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.6.12;\r\n\r\nimport \"./libs/SafeMath.sol\";\r\nimport \"./libs/Address.sol\";\r\nimport \"./libs/Ownable.sol\";\r\nimport \"./libs/IERC20.sol\";\r\n\r\n/*\r\n ______  _     _  ______ __   _ _______\r\n |_____] |     | |_____/ | \\  | |_____|\r\n |_____] |_____| |    \\_ |  \\_| |     |\r\n\r\n*/                                     \r\n\r\ncontract Burna is Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD;\r\n    address public dethAddress;\r\n\r\n    bool public isFunded = false;   \r\n\r\n    uint256 public fundingAmount = 0;\r\n    uint256 public supply;\r\n    uint256 public startTime;\r\n    uint256 public lastTimeBurned = 0;\r\n    uint256 public totalBurned = 0;\r\n\r\n    event BurnerFunded(uint256 _amount, uint256 _time);\r\n    event dethBurned(uint256 _amount, uint256 _time);\r\n\r\n    constructor(address _deth, uint256 _startTime) public {\r\n        dethAddress = _deth;\r\n        startTime = _startTime;\r\n    }\r\n\r\n    function getTotalBurned() public view returns (uint256) {\r\n        require(isFunded, \"Burner is not funded yet\");\r\n        return totalBurned;\r\n    }\r\n\r\n    function getSupply() public view returns (uint256) {\r\n        require(isFunded, \"Burner is not funded yet\");\r\n        return supply;\r\n    }\r\n\r\n    function getStartTime() public view returns (uint256) {\r\n        return startTime;\r\n    }\r\n\r\n    function getDethAddress() public view returns (address) {\r\n        require(dethAddress != address(0), \"...How did you deploy without setting the d.ETH address?\");\r\n        return dethAddress;\r\n    }\r\n\r\n    function getDeadAddress() public view returns (address) {\r\n        return deadAddress;\r\n    }\r\n\r\n    function getIsFunded() public view returns (bool) {\r\n        return isFunded;\r\n    }\r\n\r\n    function fund(uint256 _amount) external onlyOwner payable {\r\n        require(isFunded == false);\r\n        require(now < startTime);\r\n        require(_amount == 500000 ether);\r\n        IERC20(dethAddress).transfer(address(this), _amount);\r\n        isFunded = true;\r\n        fundingAmount = _amount;\r\n        supply += _amount;\r\n\r\n        emit BurnerFunded(_amount, now);\r\n    }\r\n\r\n    function burn() public {\r\n        require(isFunded, \"Burner is not funded yet\");\r\n        require(now > startTime, \"Burner is not yet started\");\r\n        require(now - lastTimeBurned > 3600, \"dETH can only be burned once an hour\");\r\n        uint256 burnAmount = fundingAmount / 8760;\r\n        IERC20(dethAddress).transfer(deadAddress, burnAmount);\r\n        lastTimeBurned = now;\r\n        totalBurned += burnAmount;\r\n        supply -= burnAmount;\r\n\r\n        emit dethBurned(burnAmount, lastTimeBurned);\r\n    }\r\n\r\n}"
			},
			"contracts/libs/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"contracts/libs/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\nimport \"./Context.sol\";\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n"
			},
			"contracts/libs/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/libs/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
			},
			"contracts/libs/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Burna.sol": {
				"Burna": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_deth",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"name": "BurnerFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"name": "dethBurned",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deadAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dethAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeadAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDethAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIsFunded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFunded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Burna.sol\":364:2748  contract Burna is Ownable {\r... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Burna.sol\":503:545  0x000000000000000000000000000000000000dEaD */\n  0xdead\n    /* \"contracts/Burna.sol\":464:545  address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n    /* \"contracts/Burna.sol\":610:615  false */\n  0x00\n    /* \"contracts/Burna.sol\":587:615  bool public isFunded = false */\n  0x01\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Burna.sol\":658:659  0 */\n  0x00\n    /* \"contracts/Burna.sol\":627:659  uint256 public fundingAmount = 0 */\n  0x02\n  sstore\n    /* \"contracts/Burna.sol\":757:758  0 */\n  0x00\n    /* \"contracts/Burna.sol\":725:758  uint256 public lastTimeBurned = 0 */\n  0x05\n  sstore\n    /* \"contracts/Burna.sol\":794:795  0 */\n  0x00\n    /* \"contracts/Burna.sol\":765:795  uint256 public totalBurned = 0 */\n  0x06\n  sstore\n    /* \"contracts/Burna.sol\":918:1043  constructor(address _deth, uint256 _startTime) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/libs/Ownable.sol\":888:905  address msgSender */\n  0x00\n    /* \"contracts/libs/Ownable.sol\":908:920  _msgSender() */\n  tag_6\n    /* \"contracts/libs/Ownable.sol\":908:918  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/libs/Ownable.sol\":908:920  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/libs/Ownable.sol\":888:920  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/libs/Ownable.sol\":940:949  msgSender */\n  dup1\n    /* \"contracts/libs/Ownable.sol\":931:937  _owner */\n  0x00\n  dup1\n    /* \"contracts/libs/Ownable.sol\":931:949  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/libs/Ownable.sol\":998:1007  msgSender */\n  dup1\n    /* \"contracts/libs/Ownable.sol\":965:1008  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/libs/Ownable.sol\":994:995  0 */\n  0x00\n    /* \"contracts/libs/Ownable.sol\":965:1008  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/libs/Ownable.sol\":853:1016  constructor () internal {\r... */\n  pop\n    /* \"contracts/Burna.sol\":997:1002  _deth */\n  dup2\n    /* \"contracts/Burna.sol\":983:994  dethAddress */\n  0x01\n  0x00\n    /* \"contracts/Burna.sol\":983:1002  dethAddress = _deth */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Burna.sol\":1025:1035  _startTime */\n  dup1\n    /* \"contracts/Burna.sol\":1013:1022  startTime */\n  0x04\n    /* \"contracts/Burna.sol\":1013:1035  startTime = _startTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Burna.sol\":918:1043  constructor(address _deth, uint256 _startTime) public {\r... */\n  pop\n  pop\n    /* \"contracts/Burna.sol\":364:2748  contract Burna is Ownable {\r... */\n  jump(tag_9)\n    /* \"contracts/libs/Context.sol\":607:713  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_7:\n    /* \"contracts/libs/Context.sol\":660:675  address payable */\n  0x00\n    /* \"contracts/libs/Context.sol\":695:705  msg.sender */\n  caller\n    /* \"contracts/libs/Context.sol\":688:705  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/libs/Context.sol\":607:713  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/Burna.sol\":364:2748  contract Burna is Ownable {\r... */\ntag_9:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Burna.sol\":364:2748  contract Burna is Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xca1d209d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xca1d209d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcd066e45\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf0f2d413\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9020e645\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb0feb130\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb55cd04b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc828371e\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x44df8e70\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x44df8e70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6c9c2faf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7c654303\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x047fc9aa\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x04a79c97\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27c8f835\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3d4b5cc6\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Burna.sol\":666:687  uint256 public supply */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":627:659  uint256 public fundingAmount = 0 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":464:545  address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":725:758  uint256 public lastTimeBurned = 0 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":2235:2743  function burn() public {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Burna.sol\":1208:1347  function getSupply() public view returns (uint256) {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libs/Ownable.sol\":1739:1887  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Burna.sol\":694:718  uint256 public startTime */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":587:615  bool public isFunded = false */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libs/Ownable.sol\":1097:1176  function owner() public view returns (address) {\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":552:578  address public dethAddress */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1658:1751  function getDeadAddress() public view returns (address) {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1051:1200  function getTotalBurned() public view returns (uint256) {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1355:1444  function getStartTime() public view returns (uint256) {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1851:2227  function fund(uint256 _amount) external onlyOwner payable {\r... */\n    tag_16:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/Burna.sol\":1452:1650  function getDethAddress() public view returns (address) {\r... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":765:795  uint256 public totalBurned = 0 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1759:1843  function getIsFunded() public view returns (bool) {\r... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libs/Ownable.sol\":2042:2286  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/Burna.sol\":666:687  uint256 public supply */\n    tag_26:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":627:659  uint256 public fundingAmount = 0 */\n    tag_29:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":464:545  address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_32:\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":725:758  uint256 public lastTimeBurned = 0 */\n    tag_35:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":2235:2743  function burn() public {\r... */\n    tag_38:\n        /* \"contracts/Burna.sol\":2277:2285  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":2269:2314  require(isFunded, \"Burner is not funded yet\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4275726e6572206973206e6f742066756e646564207965740000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/Burna.sol\":2339:2348  startTime */\n      sload(0x04)\n        /* \"contracts/Burna.sol\":2333:2336  now */\n      timestamp\n        /* \"contracts/Burna.sol\":2333:2348  now > startTime */\n      gt\n        /* \"contracts/Burna.sol\":2325:2378  require(now > startTime, \"Burner is not yet started\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4275726e6572206973206e6f7420796574207374617274656400000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/Burna.sol\":2420:2424  3600 */\n      0x0e10\n        /* \"contracts/Burna.sol\":2403:2417  lastTimeBurned */\n      sload(0x05)\n        /* \"contracts/Burna.sol\":2397:2400  now */\n      timestamp\n        /* \"contracts/Burna.sol\":2397:2417  now - lastTimeBurned */\n      sub\n        /* \"contracts/Burna.sol\":2397:2424  now - lastTimeBurned > 3600 */\n      gt\n        /* \"contracts/Burna.sol\":2389:2465  require(now - lastTimeBurned > 3600, \"dETH can only be burned once an hour\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a67d95f2293c637cd38d40b5cce5f7b6bf2fc1953650a6994d31e9ed06ca1ce0\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/Burna.sol\":2476:2494  uint256 burnAmount */\n      0x00\n        /* \"contracts/Burna.sol\":2513:2517  8760 */\n      0x2238\n        /* \"contracts/Burna.sol\":2497:2510  fundingAmount */\n      sload(0x02)\n        /* \"contracts/Burna.sol\":2497:2517  fundingAmount / 8760 */\n      dup2\n      tag_86\n      jumpi\n      invalid\n    tag_86:\n      div\n        /* \"contracts/Burna.sol\":2476:2517  uint256 burnAmount = fundingAmount / 8760 */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":2535:2546  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":2528:2556  IERC20(dethAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Burna.sol\":2557:2568  deadAddress */\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n        /* \"contracts/Burna.sol\":2570:2580  burnAmount */\n      dup4\n        /* \"contracts/Burna.sol\":2528:2581  IERC20(dethAddress).transfer(deadAddress, burnAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Burna.sol\":2609:2612  now */\n      timestamp\n        /* \"contracts/Burna.sol\":2592:2606  lastTimeBurned */\n      0x05\n        /* \"contracts/Burna.sol\":2592:2612  lastTimeBurned = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":2638:2648  burnAmount */\n      dup1\n        /* \"contracts/Burna.sol\":2623:2634  totalBurned */\n      0x06\n      0x00\n        /* \"contracts/Burna.sol\":2623:2648  totalBurned += burnAmount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":2669:2679  burnAmount */\n      dup1\n        /* \"contracts/Burna.sol\":2659:2665  supply */\n      0x03\n      0x00\n        /* \"contracts/Burna.sol\":2659:2679  supply -= burnAmount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":2697:2735  dethBurned(burnAmount, lastTimeBurned) */\n      0x9d7b6228054d3633be8cd708771f400e539e62d2df76aca71f3d8b0eb287eb24\n        /* \"contracts/Burna.sol\":2708:2718  burnAmount */\n      dup2\n        /* \"contracts/Burna.sol\":2720:2734  lastTimeBurned */\n      sload(0x05)\n        /* \"contracts/Burna.sol\":2697:2735  dethBurned(burnAmount, lastTimeBurned) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Burna.sol\":2235:2743  function burn() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Burna.sol\":1208:1347  function getSupply() public view returns (uint256) {\r... */\n    tag_41:\n        /* \"contracts/Burna.sol\":1250:1257  uint256 */\n      0x00\n        /* \"contracts/Burna.sol\":1278:1286  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":1270:1315  require(isFunded, \"Burner is not funded yet\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4275726e6572206973206e6f742066756e646564207965740000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/Burna.sol\":1333:1339  supply */\n      sload(0x03)\n        /* \"contracts/Burna.sol\":1326:1339  return supply */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1208:1347  function getSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/libs/Ownable.sol\":1739:1887  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_44:\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      tag_94\n        /* \"contracts/libs/Ownable.sol\":1319:1329  _msgSender */\n      tag_95\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1315  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libs/Ownable.sol\":1301:1368  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/libs/Ownable.sol\":1846:1847  0 */\n      0x00\n        /* \"contracts/libs/Ownable.sol\":1809:1849  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1830:1836  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1809:1849  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/libs/Ownable.sol\":1877:1878  0 */\n      0x00\n        /* \"contracts/libs/Ownable.sol\":1860:1866  _owner */\n      dup1\n      0x00\n        /* \"contracts/libs/Ownable.sol\":1860:1879  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/libs/Ownable.sol\":1739:1887  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/Burna.sol\":694:718  uint256 public startTime */\n    tag_47:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":587:615  bool public isFunded = false */\n    tag_50:\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/libs/Ownable.sol\":1097:1176  function owner() public view returns (address) {\r... */\n    tag_53:\n        /* \"contracts/libs/Ownable.sol\":1135:1142  address */\n      0x00\n        /* \"contracts/libs/Ownable.sol\":1162:1168  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1155:1168  return _owner */\n      swap1\n      pop\n        /* \"contracts/libs/Ownable.sol\":1097:1176  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":552:578  address public dethAddress */\n    tag_56:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":1658:1751  function getDeadAddress() public view returns (address) {\r... */\n    tag_59:\n        /* \"contracts/Burna.sol\":1705:1712  address */\n      0x00\n        /* \"contracts/Burna.sol\":1732:1743  deadAddress */\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n        /* \"contracts/Burna.sol\":1725:1743  return deadAddress */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1658:1751  function getDeadAddress() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":1051:1200  function getTotalBurned() public view returns (uint256) {\r... */\n    tag_62:\n        /* \"contracts/Burna.sol\":1098:1105  uint256 */\n      0x00\n        /* \"contracts/Burna.sol\":1126:1134  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":1118:1163  require(isFunded, \"Burner is not funded yet\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4275726e6572206973206e6f742066756e646564207965740000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/Burna.sol\":1181:1192  totalBurned */\n      sload(0x06)\n        /* \"contracts/Burna.sol\":1174:1192  return totalBurned */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1051:1200  function getTotalBurned() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":1355:1444  function getStartTime() public view returns (uint256) {\r... */\n    tag_65:\n        /* \"contracts/Burna.sol\":1400:1407  uint256 */\n      0x00\n        /* \"contracts/Burna.sol\":1427:1436  startTime */\n      sload(0x04)\n        /* \"contracts/Burna.sol\":1420:1436  return startTime */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1355:1444  function getStartTime() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":1851:2227  function fund(uint256 _amount) external onlyOwner payable {\r... */\n    tag_68:\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      tag_104\n        /* \"contracts/libs/Ownable.sol\":1319:1329  _msgSender */\n      tag_95\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1315  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libs/Ownable.sol\":1301:1368  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/Burna.sol\":1940:1945  false */\n      0x00\n        /* \"contracts/Burna.sol\":1928:1945  isFunded == false */\n      iszero\n      iszero\n        /* \"contracts/Burna.sol\":1928:1936  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":1928:1945  isFunded == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Burna.sol\":1920:1946  require(isFunded == false) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n        /* \"contracts/Burna.sol\":1971:1980  startTime */\n      sload(0x04)\n        /* \"contracts/Burna.sol\":1965:1968  now */\n      timestamp\n        /* \"contracts/Burna.sol\":1965:1980  now < startTime */\n      lt\n        /* \"contracts/Burna.sol\":1957:1981  require(now < startTime) */\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n        /* \"contracts/Burna.sol\":2011:2023  500000 ether */\n      0x69e10de76676d0800000\n        /* \"contracts/Burna.sol\":2000:2007  _amount */\n      dup2\n        /* \"contracts/Burna.sol\":2000:2023  _amount == 500000 ether */\n      eq\n        /* \"contracts/Burna.sol\":1992:2024  require(_amount == 500000 ether) */\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n        /* \"contracts/Burna.sol\":2042:2053  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":2035:2063  IERC20(dethAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Burna.sol\":2072:2076  this */\n      address\n        /* \"contracts/Burna.sol\":2079:2086  _amount */\n      dup4\n        /* \"contracts/Burna.sol\":2035:2087  IERC20(dethAddress).transfer(address(this), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Burna.sol\":2109:2113  true */\n      0x01\n        /* \"contracts/Burna.sol\":2098:2106  isFunded */\n      dup1\n      0x14\n        /* \"contracts/Burna.sol\":2098:2113  isFunded = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":2140:2147  _amount */\n      dup1\n        /* \"contracts/Burna.sol\":2124:2137  fundingAmount */\n      0x02\n        /* \"contracts/Burna.sol\":2124:2147  fundingAmount = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":2168:2175  _amount */\n      dup1\n        /* \"contracts/Burna.sol\":2158:2164  supply */\n      0x03\n      0x00\n        /* \"contracts/Burna.sol\":2158:2175  supply += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":2193:2219  BurnerFunded(_amount, now) */\n      0x73d856f5acf4bb0dfcc775791dbf5aa882b81951d141781124f00428c3075eb7\n        /* \"contracts/Burna.sol\":2206:2213  _amount */\n      dup2\n        /* \"contracts/Burna.sol\":2215:2218  now */\n      timestamp\n        /* \"contracts/Burna.sol\":2193:2219  BurnerFunded(_amount, now) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Burna.sol\":1851:2227  function fund(uint256 _amount) external onlyOwner payable {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Burna.sol\":1452:1650  function getDethAddress() public view returns (address) {\r... */\n    tag_71:\n        /* \"contracts/Burna.sol\":1499:1506  address */\n      0x00\n        /* \"contracts/Burna.sol\":1550:1551  0 */\n      dup1\n        /* \"contracts/Burna.sol\":1527:1552  dethAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":1527:1538  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":1527:1552  dethAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Burna.sol\":1519:1613  require(dethAddress != address(0), \"...How did you deploy without setting the d.ETH address?\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_106b4b52d9d512b08ac83511c3715aa863b17b2d5146340d08510536d0e73a20\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/Burna.sol\":1631:1642  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":1624:1642  return dethAddress */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1452:1650  function getDethAddress() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":765:795  uint256 public totalBurned = 0 */\n    tag_74:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":1759:1843  function getIsFunded() public view returns (bool) {\r... */\n    tag_77:\n        /* \"contracts/Burna.sol\":1803:1807  bool */\n      0x00\n        /* \"contracts/Burna.sol\":1827:1835  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":1820:1835  return isFunded */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1759:1843  function getIsFunded() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/libs/Ownable.sol\":2042:2286  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_81:\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      tag_118\n        /* \"contracts/libs/Ownable.sol\":1319:1329  _msgSender */\n      tag_95\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1315  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libs/Ownable.sol\":1301:1368  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/libs/Ownable.sol\":2151:2152  0 */\n      0x00\n        /* \"contracts/libs/Ownable.sol\":2131:2153  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":2131:2139  newOwner */\n      dup2\n        /* \"contracts/libs/Ownable.sol\":2131:2153  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/libs/Ownable.sol\":2123:2196  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/libs/Ownable.sol\":2241:2249  newOwner */\n      dup1\n        /* \"contracts/libs/Ownable.sol\":2212:2250  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":2233:2239  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":2212:2250  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/libs/Ownable.sol\":2270:2278  newOwner */\n      dup1\n        /* \"contracts/libs/Ownable.sol\":2261:2267  _owner */\n      0x00\n      dup1\n        /* \"contracts/libs/Ownable.sol\":2261:2278  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/libs/Ownable.sol\":2042:2286  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/libs/Context.sol\":607:713  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_95:\n        /* \"contracts/libs/Context.sol\":660:675  address payable */\n      0x00\n        /* \"contracts/libs/Context.sol\":695:705  msg.sender */\n      caller\n        /* \"contracts/libs/Context.sol\":688:705  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/libs/Context.sol\":607:713  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n    stop\n    data_106b4b52d9d512b08ac83511c3715aa863b17b2d5146340d08510536d0e73a20 2e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e672074686520642e45544820616464726573733f\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_a67d95f2293c637cd38d40b5cce5f7b6bf2fc1953650a6994d31e9ed06ca1ce0 644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f7572\n\n    auxdata: 0xa26469706673582212201d1846b5f4fdecd98d712195152c5f4cf7c9f55da6f138ebf8388e3c5dcd187d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60a060405261dead73ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b8152506000600160146101000a81548160ff02191690831515021790555060006002556000600555600060065534801561007257600080fd5b506040516112d13803806112d18339818101604052604081101561009557600080fd5b81019080805190602001909291908051906020019092919050505060006100c06101ad60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060048190555050506101b5565b600033905090565b60805160601c6110f56101dc600039806104cb528061069c5280610a3452506110f56000f3fe6080604052600436106101145760003560e01c80638da5cb5b116100a0578063ca1d209d11610064578063ca1d209d146103a5578063cd066e45146103d3578063d89135cd14610414578063f0f2d4131461043f578063f2fde38b1461046c57610114565b80638da5cb5b1461028c5780639020e645146102cd578063b0feb1301461030e578063b55cd04b1461034f578063c828371e1461037a57610114565b806344df8e70116100e757806344df8e70146101db5780636c9c2faf146101f2578063715018a61461021d57806378e97925146102345780637c6543031461025f57610114565b8063047fc9aa1461011957806304a79c971461014457806327c8f8351461016f5780633d4b5cc6146101b0575b600080fd5b34801561012557600080fd5b5061012e6104bd565b6040518082815260200191505060405180910390f35b34801561015057600080fd5b506101596104c3565b6040518082815260200191505060405180910390f35b34801561017b57600080fd5b506101846104c9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101bc57600080fd5b506101c56104ed565b6040518082815260200191505060405180910390f35b3480156101e757600080fd5b506101f06104f3565b005b3480156101fe57600080fd5b506102076107b6565b6040518082815260200191505060405180910390f35b34801561022957600080fd5b50610232610842565b005b34801561024057600080fd5b506102496109c8565b6040518082815260200191505060405180910390f35b34801561026b57600080fd5b506102746109ce565b60405180821515815260200191505060405180910390f35b34801561029857600080fd5b506102a16109e1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d957600080fd5b506102e2610a0a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031a57600080fd5b50610323610a30565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035b57600080fd5b50610364610a58565b6040518082815260200191505060405180910390f35b34801561038657600080fd5b5061038f610ae4565b6040518082815260200191505060405180910390f35b6103d1600480360360208110156103bb57600080fd5b8101908080359060200190929190505050610aee565b005b3480156103df57600080fd5b506103e8610d3c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042057600080fd5b50610429610e0d565b6040518082815260200191505060405180910390f35b34801561044b57600080fd5b50610454610e13565b60405180821515815260200191505060405180910390f35b34801561047857600080fd5b506104bb6004803603602081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e2a565b005b60035481565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b600160149054906101000a900460ff16610575576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b60045442116105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4275726e6572206973206e6f742079657420737461727465640000000000000081525060200191505060405180910390fd5b610e1060055442031161064a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061109c6024913960400191505060405180910390fd5b60006122386002548161065957fe5b049050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561070f57600080fd5b505af1158015610723573d6000803e3d6000fd5b505050506040513d602081101561073957600080fd5b8101908080519060200190929190505050504260058190555080600660008282540192505081905550806003600082825403925050819055507f9d7b6228054d3633be8cd708771f400e539e62d2df76aca71f3d8b0eb287eb2481600554604051808381526020018281526020019250505060405180910390a150565b6000600160149054906101000a900460ff1661083a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b600354905090565b61084a611035565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60045481565b600160149054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160149054906101000a900460ff16610adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b600654905090565b6000600454905090565b610af6611035565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bb6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60001515600160149054906101000a900460ff16151514610bd657600080fd5b6004544210610be457600080fd5b6969e10de76676d08000008114610bfa57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050506040513d6020811015610cb757600080fd5b81019080805190602001909291905050505060018060146101000a81548160ff02191690831515021790555080600281905550806003600082825401925050819055507f73d856f5acf4bb0dfcc775791dbf5aa882b81951d141781124f00428c3075eb78142604051808381526020018281526020019250505060405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610de5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061103e6038913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000600160149054906101000a900460ff16905090565b610e32611035565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ef2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806110766026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe2e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e672074686520642e45544820616464726573733f4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f7572a26469706673582212201d1846b5f4fdecd98d712195152c5f4cf7c9f55da6f138ebf8388e3c5dcd187d64736f6c634300060c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12D1 CODESIZE SUB DUP1 PUSH2 0x12D1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH2 0xC0 PUSH2 0x1AD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x10F5 PUSH2 0x1DC PUSH1 0x0 CODECOPY DUP1 PUSH2 0x4CB MSTORE DUP1 PUSH2 0x69C MSTORE DUP1 PUSH2 0xA34 MSTORE POP PUSH2 0x10F5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCA1D209D GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xCD066E45 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xF0F2D413 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x46C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x9020E645 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xB0FEB130 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xB55CD04B EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xC828371E EQ PUSH2 0x37A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x44DF8E70 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x7C654303 EQ PUSH2 0x25F JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x47FC9AA EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x4A79C97 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x27C8F835 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x3D4B5CC6 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x4F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x842 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F7420796574207374617274656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH1 0x5 SLOAD TIMESTAMP SUB GT PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x109C PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2238 PUSH1 0x2 SLOAD DUP2 PUSH2 0x659 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9D7B6228054D3633BE8CD708771F400E539E62D2DF76ACA71F3D8B0EB287EB24 DUP2 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84A PUSH2 0x1035 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1035 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xBE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 EQ PUSH2 0xBFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x73D856F5ACF4BB0DFCC775791DBF5AA882B81951D141781124F00428C3075EB7 DUP2 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103E PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE32 PUSH2 0x1035 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1076 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP INVALID 0x2E 0x2E 0x2E 0x48 PUSH16 0x772064696420796F75206465706C6F79 KECCAK256 PUSH24 0x6974686F75742073657474696E672074686520642E455448 KECCAK256 PUSH2 0x6464 PUSH19 0x6573733F4F776E61626C653A206E6577206F77 PUSH15 0x657220697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x657373644554482063616E206F6E6C79206265 KECCAK256 PUSH3 0x75726E PUSH6 0x64206F6E6365 KECCAK256 PUSH2 0x6E20 PUSH9 0x6F7572A26469706673 PC 0x22 SLT KECCAK256 SAR XOR CHAINID 0xB5 DELEGATECALL REVERT 0xEC 0xD9 DUP14 PUSH18 0x2195152C5F4CF7C9F55DA6F138EBF8388E3C 0x5D 0xCD XOR PUSH30 0x64736F6C634300060C003300000000000000000000000000000000000000 ",
							"sourceMap": "364:2384:0:-:0;;;503:42;464:81;;;;;;;;;;;610:5;587:28;;;;;;;;;;;;;;;;;;;;658:1;627:32;;757:1;725:33;;794:1;765:30;;918:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;888:17:4;908:12;:10;;;:12;;:::i;:::-;888:32;;940:9;931:6;;:18;;;;;;;;;;;;;;;;;;998:9;965:43;;994:1;965:43;;;;;;;;;;;;853:163;997:5:0;983:11;;:19;;;;;;;;;;;;;;;;;;1025:10;1013:9;:22;;;;918:125;;364:2384;;607:106:2;660:15;695:10;688:17;;607:106;:::o;364:2384:0:-;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"16": [
									{
										"length": 32,
										"start": 1227
									},
									{
										"length": 32,
										"start": 1692
									},
									{
										"length": 32,
										"start": 2612
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101145760003560e01c80638da5cb5b116100a0578063ca1d209d11610064578063ca1d209d146103a5578063cd066e45146103d3578063d89135cd14610414578063f0f2d4131461043f578063f2fde38b1461046c57610114565b80638da5cb5b1461028c5780639020e645146102cd578063b0feb1301461030e578063b55cd04b1461034f578063c828371e1461037a57610114565b806344df8e70116100e757806344df8e70146101db5780636c9c2faf146101f2578063715018a61461021d57806378e97925146102345780637c6543031461025f57610114565b8063047fc9aa1461011957806304a79c971461014457806327c8f8351461016f5780633d4b5cc6146101b0575b600080fd5b34801561012557600080fd5b5061012e6104bd565b6040518082815260200191505060405180910390f35b34801561015057600080fd5b506101596104c3565b6040518082815260200191505060405180910390f35b34801561017b57600080fd5b506101846104c9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101bc57600080fd5b506101c56104ed565b6040518082815260200191505060405180910390f35b3480156101e757600080fd5b506101f06104f3565b005b3480156101fe57600080fd5b506102076107b6565b6040518082815260200191505060405180910390f35b34801561022957600080fd5b50610232610842565b005b34801561024057600080fd5b506102496109c8565b6040518082815260200191505060405180910390f35b34801561026b57600080fd5b506102746109ce565b60405180821515815260200191505060405180910390f35b34801561029857600080fd5b506102a16109e1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d957600080fd5b506102e2610a0a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031a57600080fd5b50610323610a30565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035b57600080fd5b50610364610a58565b6040518082815260200191505060405180910390f35b34801561038657600080fd5b5061038f610ae4565b6040518082815260200191505060405180910390f35b6103d1600480360360208110156103bb57600080fd5b8101908080359060200190929190505050610aee565b005b3480156103df57600080fd5b506103e8610d3c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042057600080fd5b50610429610e0d565b6040518082815260200191505060405180910390f35b34801561044b57600080fd5b50610454610e13565b60405180821515815260200191505060405180910390f35b34801561047857600080fd5b506104bb6004803603602081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e2a565b005b60035481565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b600160149054906101000a900460ff16610575576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b60045442116105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4275726e6572206973206e6f742079657420737461727465640000000000000081525060200191505060405180910390fd5b610e1060055442031161064a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061109c6024913960400191505060405180910390fd5b60006122386002548161065957fe5b049050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561070f57600080fd5b505af1158015610723573d6000803e3d6000fd5b505050506040513d602081101561073957600080fd5b8101908080519060200190929190505050504260058190555080600660008282540192505081905550806003600082825403925050819055507f9d7b6228054d3633be8cd708771f400e539e62d2df76aca71f3d8b0eb287eb2481600554604051808381526020018281526020019250505060405180910390a150565b6000600160149054906101000a900460ff1661083a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b600354905090565b61084a611035565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60045481565b600160149054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160149054906101000a900460ff16610adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b600654905090565b6000600454905090565b610af6611035565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bb6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60001515600160149054906101000a900460ff16151514610bd657600080fd5b6004544210610be457600080fd5b6969e10de76676d08000008114610bfa57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050506040513d6020811015610cb757600080fd5b81019080805190602001909291905050505060018060146101000a81548160ff02191690831515021790555080600281905550806003600082825401925050819055507f73d856f5acf4bb0dfcc775791dbf5aa882b81951d141781124f00428c3075eb78142604051808381526020018281526020019250505060405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610de5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061103e6038913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000600160149054906101000a900460ff16905090565b610e32611035565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ef2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806110766026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe2e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e672074686520642e45544820616464726573733f4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f7572a26469706673582212201d1846b5f4fdecd98d712195152c5f4cf7c9f55da6f138ebf8388e3c5dcd187d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCA1D209D GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xCD066E45 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xF0F2D413 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x46C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x9020E645 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xB0FEB130 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xB55CD04B EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xC828371E EQ PUSH2 0x37A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x44DF8E70 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x7C654303 EQ PUSH2 0x25F JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x47FC9AA EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x4A79C97 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x27C8F835 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x3D4B5CC6 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x4F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x842 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F7420796574207374617274656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH1 0x5 SLOAD TIMESTAMP SUB GT PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x109C PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2238 PUSH1 0x2 SLOAD DUP2 PUSH2 0x659 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9D7B6228054D3633BE8CD708771F400E539E62D2DF76ACA71F3D8B0EB287EB24 DUP2 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84A PUSH2 0x1035 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1035 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xBE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 EQ PUSH2 0xBFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x73D856F5ACF4BB0DFCC775791DBF5AA882B81951D141781124F00428C3075EB7 DUP2 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103E PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE32 PUSH2 0x1035 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1076 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP INVALID 0x2E 0x2E 0x2E 0x48 PUSH16 0x772064696420796F75206465706C6F79 KECCAK256 PUSH24 0x6974686F75742073657474696E672074686520642E455448 KECCAK256 PUSH2 0x6464 PUSH19 0x6573733F4F776E61626C653A206E6577206F77 PUSH15 0x657220697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x657373644554482063616E206F6E6C79206265 KECCAK256 PUSH3 0x75726E PUSH6 0x64206F6E6365 KECCAK256 PUSH2 0x6E20 PUSH9 0x6F7572A26469706673 PC 0x22 SLT KECCAK256 SAR XOR CHAINID 0xB5 DELEGATECALL REVERT 0xEC 0xD9 DUP14 PUSH18 0x2195152C5F4CF7C9F55DA6F138EBF8388E3C 0x5D 0xCD XOR PUSH30 0x64736F6C634300060C003300000000000000000000000000000000000000 ",
							"sourceMap": "364:2384:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;627:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;464:81;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;725:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2235:508;;;;;;;;;;;;;:::i;:::-;;1208:139;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1739:148:4;;;;;;;;;;;;;:::i;:::-;;694:24:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;587:28;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1097:79:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;552:26:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1658:93;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1051:149;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1355:89;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1851:376;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1452:198;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;765:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1759:84;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2042:244:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;666:21:0;;;;:::o;627:32::-;;;;:::o;464:81::-;;;:::o;725:33::-;;;;:::o;2235:508::-;2277:8;;;;;;;;;;;2269:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2339:9;;2333:3;:15;2325:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2420:4;2403:14;;2397:3;:20;:27;2389:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2476:18;2513:4;2497:13;;:20;;;;;;2476:41;;2535:11;;;;;;;;;;;2528:28;;;2557:11;2570:10;2528:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2609:3;2592:14;:20;;;;2638:10;2623:11;;:25;;;;;;;;;;;2669:10;2659:6;;:20;;;;;;;;;;;2697:38;2708:10;2720:14;;2697:38;;;;;;;;;;;;;;;;;;;;;;;;2235:508;:::o;1208:139::-;1250:7;1278:8;;;;;;;;;;;1270:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:6;;1326:13;;1208:139;:::o;1739:148:4:-;1319:12;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:1:::1;1809:40;;1830:6;::::0;::::1;;;;;;;;1809:40;;;;;;;;;;;;1877:1;1860:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1739:148::o:0;694:24:0:-;;;;:::o;587:28::-;;;;;;;;;;;;;:::o;1097:79:4:-;1135:7;1162:6;;;;;;;;;;;1155:13;;1097:79;:::o;552:26:0:-;;;;;;;;;;;;;:::o;1658:93::-;1705:7;1732:11;1725:18;;1658:93;:::o;1051:149::-;1098:7;1126:8;;;;;;;;;;;1118:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1181:11;;1174:18;;1051:149;:::o;1355:89::-;1400:7;1427:9;;1420:16;;1355:89;:::o;1851:376::-;1319:12:4;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:5:0::1;1928:17;;:8;;;;;;;;;;;:17;;;1920:26;;;::::0;::::1;;1971:9;;1965:3;:15;1957:24;;;::::0;::::1;;2011:12;2000:7;:23;1992:32;;;::::0;::::1;;2042:11;;;;;;;;;;;2035:28;;;2072:4;2079:7;2035:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;2109:4;2098:8:::0;::::1;:15;;;;;;;;;;;;;;;;;;2140:7;2124:13;:23;;;;2168:7;2158:6;;:17;;;;;;;;;;;2193:26;2206:7;2215:3;2193:26;;;;;;;;;;;;;;;;;;;;;;;;1851:376:::0;:::o;1452:198::-;1499:7;1550:1;1527:25;;:11;;;;;;;;;;;:25;;;;1519:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1631:11;;;;;;;;;;;1624:18;;1452:198;:::o;765:30::-;;;;:::o;1759:84::-;1803:4;1827:8;;;;;;;;;;;1820:15;;1759:84;:::o;2042:244:4:-;1319:12;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:1:::1;2131:22;;:8;:22;;;;2123:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:8;2212:38;;2233:6;::::0;::::1;;;;;;;;2212:38;;;;;;;;;;;;2270:8;2261:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2042:244:::0;:::o;607:106:2:-;660:15;695:10;688:17;;607:106;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "868200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burn()": "infinite",
								"deadAddress()": "infinite",
								"dethAddress()": "1092",
								"fund(uint256)": "infinite",
								"fundingAmount()": "1051",
								"getDeadAddress()": "infinite",
								"getDethAddress()": "infinite",
								"getIsFunded()": "1193",
								"getStartTime()": "1124",
								"getSupply()": "1961",
								"getTotalBurned()": "2005",
								"isFunded()": "1208",
								"lastTimeBurned()": "1095",
								"owner()": "1078",
								"renounceOwnership()": "24358",
								"startTime()": "1094",
								"supply()": "1029",
								"totalBurned()": "1071",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 503,
									"end": 545,
									"name": "PUSH",
									"source": 0,
									"value": "DEAD"
								},
								{
									"begin": 464,
									"end": 545,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 464,
									"end": 545,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 464,
									"end": 545,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 464,
									"end": 545,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 464,
									"end": 545,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 464,
									"end": 545,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 464,
									"end": 545,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 464,
									"end": 545,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 464,
									"end": 545,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 464,
									"end": 545,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 464,
									"end": 545,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 610,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 587,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 587,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 587,
									"end": 615,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 587,
									"end": 615,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 587,
									"end": 615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 658,
									"end": 659,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 659,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 627,
									"end": 659,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 757,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 725,
									"end": 758,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 794,
									"end": 795,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 765,
									"end": 795,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 765,
									"end": 795,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 888,
									"end": 905,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 920,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 908,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 908,
									"end": 918,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 908,
									"end": 918,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 908,
									"end": 920,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 908,
									"end": 920,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 908,
									"end": 920,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 908,
									"end": 920,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 908,
									"end": 920,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 888,
									"end": 920,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 888,
									"end": 920,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 940,
									"end": 949,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 937,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 931,
									"end": 937,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 931,
									"end": 949,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 931,
									"end": 949,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 931,
									"end": 949,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 998,
									"end": 1007,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 994,
									"end": 995,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 853,
									"end": 1016,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 997,
									"end": 1002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 983,
									"end": 994,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 983,
									"end": 994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 983,
									"end": 1002,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1025,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 918,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 607,
									"end": 713,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 607,
									"end": 713,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 660,
									"end": 675,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 705,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 688,
									"end": 705,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 688,
									"end": 705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 607,
									"end": 713,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 607,
									"end": 713,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 2748,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d1846b5f4fdecd98d712195152c5f4cf7c9f55da6f138ebf8388e3c5dcd187d64736f6c634300060c0033",
									".code": [
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "CA1D209D"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "CA1D209D"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "CD066E45"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "D89135CD"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "F0F2D413"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "9020E645"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "B0FEB130"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "B55CD04B"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "C828371E"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "44DF8E70"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "44DF8E70"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "6C9C2FAF"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "78E97925"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "7C654303"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "47FC9AA"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "4A79C97"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "27C8F835"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "3D4B5CC6"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 2748,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 694,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 552,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 666,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 627,
											"end": 659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 659,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 545,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 725,
											"end": 758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 758,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "4275726E6572206973206E6F742066756E646564207965740000000000000000"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2269,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2336,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "4275726E6572206973206E6F7420796574207374617274656400000000000000"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2325,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 2403,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2403,
											"end": 2417,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2424,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH data",
											"source": 0,
											"value": "A67D95F2293C637CD38D40B5CCE5F7B6BF2FC1953650A6994D31E9ED06CA1CE0"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2389,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "2238"
										},
										{
											"begin": 2497,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2497,
											"end": 2510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2557,
											"end": 2568,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2570,
											"end": 2580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 2679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "9D7B6228054D3633BE8CD708771F400E539E62D2DF76ACA71F3D8B0EB287EB24"
										},
										{
											"begin": 2708,
											"end": 2718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 2734,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2720,
											"end": 2734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2735,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2743,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1278,
											"end": 1286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "4275726E6572206973206E6F742066756E646564207965740000000000000000"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1270,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 587,
											"end": 615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 615,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 552,
											"end": 578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 578,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1743,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1725,
											"end": 1743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1751,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1126,
											"end": 1134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "4275726E6572206973206E6F742066756E646564207965740000000000000000"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1118,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1181,
											"end": 1192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1200,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1444,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1920,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 1968,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 1980,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 2000,
											"end": 2007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2023,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1992,
											"end": 2024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2024,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1992,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2124,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2147,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "PUSH",
											"source": 0,
											"value": "73D856F5ACF4BB0DFCC775791DBF5AA882B81951D141781124F00428C3075EB7"
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2218,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2219,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 2227,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH data",
											"source": 0,
											"value": "106B4B52D9D512B08AC83511C3715AA863B17B2D5146340D08510536D0E73A20"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1650,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 765,
											"end": 795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1843,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH data",
											"source": 4,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2278,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 713,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 607,
											"end": 713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 660,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 705,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 688,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 688,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 607,
											"end": 713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 713,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"106B4B52D9D512B08AC83511C3715AA863B17B2D5146340D08510536D0E73A20": "2e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e672074686520642e45544820616464726573733f",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"A67D95F2293C637CD38D40B5CCE5F7B6BF2FC1953650A6994D31E9ED06CA1CE0": "644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f7572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"burn()": "44df8e70",
							"deadAddress()": "27c8f835",
							"dethAddress()": "9020e645",
							"fund(uint256)": "ca1d209d",
							"fundingAmount()": "04a79c97",
							"getDeadAddress()": "b0feb130",
							"getDethAddress()": "cd066e45",
							"getIsFunded()": "f0f2d413",
							"getStartTime()": "c828371e",
							"getSupply()": "6c9c2faf",
							"getTotalBurned()": "b55cd04b",
							"isFunded()": "7c654303",
							"lastTimeBurned()": "3d4b5cc6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"startTime()": "78e97925",
							"supply()": "047fc9aa",
							"totalBurned()": "d89135cd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"BurnerFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"dethBurned\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeadAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Burna.sol\":\"Burna\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Burna.sol\":{\"keccak256\":\"0x37256f631d0aac04246f2b392354d896a1970d72b7e3931dd36c7d5191140f1c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9859f90cee61cac81c801cbe86a156af732b51649ce104aa710233424bdd8a9a\",\"dweb:/ipfs/QmedbzcwpkDwFPTLrxiW5bbvtLpsQT8V7P3Kooop2tBDod\"]},\"contracts/libs/Address.sol\":{\"keccak256\":\"0xc107b6d6f3c472b941513fddcba22ac349b7d1fc2ffebf811fd1710b4ea70bea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108af60972bc359aa631f392bd4b69d73726aa0356aa077b459f35cff0bf1c99\",\"dweb:/ipfs/QmSQCYqiR1uZ9xNB4BUmZsREBy2XduF4SpURUfUCkEECEM\"]},\"contracts/libs/Context.sol\":{\"keccak256\":\"0x28c49e98593ce6e31f8363b04e2ae434853609267280f8e3fb37478cd5c9f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be856050417ca63a463689d9c6a14170bd5dcd1429b7fce5e73d094d328b33b8\",\"dweb:/ipfs/QmSx79L7y37y8XLGWFgDby8uYQ3cv5LiiQQPrXn3uea5Cz\"]},\"contracts/libs/IERC20.sol\":{\"keccak256\":\"0x817e140eb887f5730e02a0e81a967958aaa11ab8f25850d73e95aa0652d85670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a43b5cf21d470b65b322f6ed28c33448c1b9348f0a662b9b7518ea381a4cd4\",\"dweb:/ipfs/QmVN5SrL8o7nEywePjz9NdMDubF1pHbNJhFxaQouTZP4Ni\"]},\"contracts/libs/Ownable.sol\":{\"keccak256\":\"0x06fac8d086b9cb85f7284743c52f7c51869513ed60ef3ce7fd3eaf202a865bdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://474dcd69058b4a2b8df6ca20c4318ddc081a23f85e3a2550d802aa3f84083569\",\"dweb:/ipfs/QmTcvBG4JMKgxeiUfbfcS4NnSXhXiwAkHqzemD8VujH4zG\"]},\"contracts/libs/SafeMath.sol\":{\"keccak256\":\"0x227695a35876c57d9a4dc3d7e53b640019a76c85993317647f09380e9ae8eadb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b18be79f95e2744d7ec17179427272cb82934af0933744115f9978d355bc33\",\"dweb:/ipfs/QmSmm6PDyJ27zdbjaJJFNk7TPtLxme7eGZM9tzWckipm7w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 544,
								"contract": "contracts/Burna.sol:Burna",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 18,
								"contract": "contracts/Burna.sol:Burna",
								"label": "dethAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 21,
								"contract": "contracts/Burna.sol:Burna",
								"label": "isFunded",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 24,
								"contract": "contracts/Burna.sol:Burna",
								"label": "fundingAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "contracts/Burna.sol:Burna",
								"label": "supply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "contracts/Burna.sol:Burna",
								"label": "startTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 31,
								"contract": "contracts/Burna.sol:Burna",
								"label": "lastTimeBurned",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 34,
								"contract": "contracts/Burna.sol:Burna",
								"label": "totalBurned",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libs/Address.sol\":64:5951  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libs/Address.sol\":64:5951  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201eb41316b1ba79fb4fbb912ec6cf5dd7fb3f9b2a049ae3a5d4960c5c9f010e5064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201eb41316b1ba79fb4fbb912ec6cf5dd7fb3f9b2a049ae3a5d4960c5c9f010e5064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xB4 SGT AND 0xB1 0xBA PUSH26 0xFB4FBB912EC6CF5DD7FB3F9B2A049AE3A5D4960C5C9F010E5064 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "64:5887:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201eb41316b1ba79fb4fbb912ec6cf5dd7fb3f9b2a049ae3a5d4960c5c9f010e5064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xB4 SGT AND 0xB1 0xBA PUSH26 0xFB4FBB912EC6CF5DD7FB3F9B2A049AE3A5D4960C5C9F010E5064 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "64:5887:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201eb41316b1ba79fb4fbb912ec6cf5dd7fb3f9b2a049ae3a5d4960c5c9f010e5064736f6c634300060c0033",
									".code": [
										{
											"begin": 64,
											"end": 5951,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/Address.sol\":{\"keccak256\":\"0xc107b6d6f3c472b941513fddcba22ac349b7d1fc2ffebf811fd1710b4ea70bea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108af60972bc359aa631f392bd4b69d73726aa0356aa077b459f35cff0bf1c99\",\"dweb:/ipfs/QmSQCYqiR1uZ9xNB4BUmZsREBy2XduF4SpURUfUCkEECEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/Context.sol\":{\"keccak256\":\"0x28c49e98593ce6e31f8363b04e2ae434853609267280f8e3fb37478cd5c9f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be856050417ca63a463689d9c6a14170bd5dcd1429b7fce5e73d094d328b33b8\",\"dweb:/ipfs/QmSx79L7y37y8XLGWFgDby8uYQ3cv5LiiQQPrXn3uea5Cz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/IERC20.sol\":{\"keccak256\":\"0x817e140eb887f5730e02a0e81a967958aaa11ab8f25850d73e95aa0652d85670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a43b5cf21d470b65b322f6ed28c33448c1b9348f0a662b9b7518ea381a4cd4\",\"dweb:/ipfs/QmVN5SrL8o7nEywePjz9NdMDubF1pHbNJhFxaQouTZP4Ni\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/Context.sol\":{\"keccak256\":\"0x28c49e98593ce6e31f8363b04e2ae434853609267280f8e3fb37478cd5c9f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be856050417ca63a463689d9c6a14170bd5dcd1429b7fce5e73d094d328b33b8\",\"dweb:/ipfs/QmSx79L7y37y8XLGWFgDby8uYQ3cv5LiiQQPrXn3uea5Cz\"]},\"contracts/libs/Ownable.sol\":{\"keccak256\":\"0x06fac8d086b9cb85f7284743c52f7c51869513ed60ef3ce7fd3eaf202a865bdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://474dcd69058b4a2b8df6ca20c4318ddc081a23f85e3a2550d802aa3f84083569\",\"dweb:/ipfs/QmTcvBG4JMKgxeiUfbfcS4NnSXhXiwAkHqzemD8VujH4zG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 544,
								"contract": "contracts/libs/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libs/SafeMath.sol\":641:5360  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libs/SafeMath.sol\":641:5360  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220092a68f09ea98cbf72f1aa3db64fec3af6ef4569e6efdbb0573be3b3062fe88e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220092a68f09ea98cbf72f1aa3db64fec3af6ef4569e6efdbb0573be3b3062fe88e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2A PUSH9 0xF09EA98CBF72F1AA3D 0xB6 0x4F 0xEC GASPRICE 0xF6 0xEF GASLIMIT PUSH10 0xE6EFDBB0573BE3B3062F 0xE8 DUP15 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "641:4719:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220092a68f09ea98cbf72f1aa3db64fec3af6ef4569e6efdbb0573be3b3062fe88e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2A PUSH9 0xF09EA98CBF72F1AA3D 0xB6 0x4F 0xEC GASPRICE 0xF6 0xEF GASLIMIT PUSH10 0xE6EFDBB0573BE3B3062F 0xE8 DUP15 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "641:4719:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220092a68f09ea98cbf72f1aa3db64fec3af6ef4569e6efdbb0573be3b3062fe88e64736f6c634300060c0033",
									".code": [
										{
											"begin": 641,
											"end": 5360,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/SafeMath.sol\":{\"keccak256\":\"0x227695a35876c57d9a4dc3d7e53b640019a76c85993317647f09380e9ae8eadb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b18be79f95e2744d7ec17179427272cb82934af0933744115f9978d355bc33\",\"dweb:/ipfs/QmSmm6PDyJ27zdbjaJJFNk7TPtLxme7eGZM9tzWckipm7w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Burna.sol": {
				"ast": {
					"absolutePath": "contracts/Burna.sol",
					"exportedSymbols": {
						"Burna": [
							241
						]
					},
					"id": 242,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"absolutePath": "contracts/libs/SafeMath.sol",
							"file": "./libs/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 842,
							"src": "70:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/Address.sol",
							"file": "./libs/Address.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 436,
							"src": "101:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/Ownable.sol",
							"file": "./libs/Ownable.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 646,
							"src": "131:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/IERC20.sol",
							"file": "./libs/IERC20.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 537,
							"src": "161:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 6,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 645,
										"src": "382:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$645",
											"typeString": "contract Ownable"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "382:7:0"
								}
							],
							"contractDependencies": [
								458,
								645
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241,
								645,
								458
							],
							"name": "Burna",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 10,
									"libraryName": {
										"contractScope": null,
										"id": 8,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 841,
										"src": "403:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$841",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "397:27:0",
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "416:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 13,
									"libraryName": {
										"contractScope": null,
										"id": 11,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "436:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$435",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "430:26:0",
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "448:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "27c8f835",
									"id": 16,
									"mutability": "immutable",
									"name": "deadAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "464:81:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "503:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9020e645",
									"id": 18,
									"mutability": "mutable",
									"name": "dethAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "552:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "552:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7c654303",
									"id": 21,
									"mutability": "mutable",
									"name": "isFunded",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "587:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 19,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "587:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "610:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "04a79c97",
									"id": 24,
									"mutability": "mutable",
									"name": "fundingAmount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "627:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "658:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "047fc9aa",
									"id": 26,
									"mutability": "mutable",
									"name": "supply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "666:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "666:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 28,
									"mutability": "mutable",
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "694:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "694:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3d4b5cc6",
									"id": 31,
									"mutability": "mutable",
									"name": "lastTimeBurned",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "725:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 29,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "725:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "757:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d89135cd",
									"id": 34,
									"mutability": "mutable",
									"name": "totalBurned",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "765:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "765:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "794:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 40,
									"name": "BurnerFunded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "840:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:32:0"
									},
									"src": "804:51:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "dethBurned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "895:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "877:32:0"
									},
									"src": "861:49:0"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "972:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 53,
														"name": "dethAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "983:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "_deth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "997:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "983:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "983:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 57,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1013:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 58,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1025:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1013:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1013:22:0"
											}
										]
									},
									"documentation": null,
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_deth",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "930:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_startTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "945:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "929:35:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:0:0"
									},
									"scope": 241,
									"src": "918:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1107:93:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 68,
															"name": "isFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1126:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e6572206973206e6f742066756e64656420796574",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1136:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															},
															"value": "Burner is not funded yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1118:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1118:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"name": "totalBurned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "1181:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 66,
												"id": 73,
												"nodeType": "Return",
												"src": "1174:18:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b55cd04b",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalBurned",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "1098:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1097:9:0"
									},
									"scope": 241,
									"src": "1051:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1259:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 81,
															"name": "isFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1278:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e6572206973206e6f742066756e64656420796574",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1288:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															},
															"value": "Burner is not funded yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															}
														],
														"id": 80,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1270:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1270:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 85,
													"name": "supply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "1333:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "1326:13:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6c9c2faf",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "1250:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1249:9:0"
									},
									"scope": 241,
									"src": "1208:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1409:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"name": "startTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1427:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 94,
												"nodeType": "Return",
												"src": "1420:16:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "c828371e",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStartTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1376:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 96,
												"src": "1400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1399:9:0"
									},
									"scope": 241,
									"src": "1355:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1508:142:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 102,
																"name": "dethAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1527:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1550:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 103,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1542:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1542:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1527:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "2e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e672074686520642e45544820616464726573733f",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1554:58:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_106b4b52d9d512b08ac83511c3715aa863b17b2d5146340d08510536d0e73a20",
																"typeString": "literal_string \"...How did you deploy without setting the d.ETH address?\""
															},
															"value": "...How did you deploy without setting the d.ETH address?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_106b4b52d9d512b08ac83511c3715aa863b17b2d5146340d08510536d0e73a20",
																"typeString": "literal_string \"...How did you deploy without setting the d.ETH address?\""
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1519:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1519:94:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 111,
													"name": "dethAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "1631:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 100,
												"id": 112,
												"nodeType": "Return",
												"src": "1624:18:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "cd066e45",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDethAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "1499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1498:9:0"
									},
									"scope": 241,
									"src": "1452:198:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1714:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 119,
													"name": "deadAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "1732:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 118,
												"id": 120,
												"nodeType": "Return",
												"src": "1725:18:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b0feb130",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeadAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1681:2:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "1705:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1704:9:0"
									},
									"scope": 241,
									"src": "1658:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1809:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 127,
													"name": "isFunded",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 21,
													"src": "1827:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 126,
												"id": 128,
												"nodeType": "Return",
												"src": "1820:15:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f0f2d413",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIsFunded",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1779:2:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "1803:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1803:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1802:6:0"
									},
									"scope": 241,
									"src": "1759:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1909:318:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "isFunded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1928:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1940:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1928:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1920:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1920:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "1965:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 145,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1971:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1965:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1957:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1957:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1957:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 150,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "2000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "353030303030",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2011:12:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500000000000000000000000_by_1",
																	"typeString": "int_const 500000000000000000000000"
																},
																"value": "500000"
															},
															"src": "2000:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1992:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1992:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 161,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2072:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Burna_$241",
																		"typeString": "contract Burna"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Burna_$241",
																		"typeString": "contract Burna"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2064:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 159,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2064:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2064:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 163,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "2079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 156,
																	"name": "dethAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2042:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 155,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "2035:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$536_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2035:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 485,
														"src": "2035:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "2035:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 166,
														"name": "isFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "2098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2098:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2098:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 170,
														"name": "fundingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "2124:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 171,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2124:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2124:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 174,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2158:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 175,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2158:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2158:17:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 179,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "2206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 180,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -17,
															"src": "2215:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 178,
														"name": "BurnerFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2193:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2193:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "EmitStatement",
												"src": "2188:31:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ca1d209d",
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 135,
											"modifierName": {
												"argumentTypes": null,
												"id": 134,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 594,
												"src": "1891:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1891:9:0"
										}
									],
									"name": "fund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1865:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1864:17:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1909:0:0"
									},
									"scope": 241,
									"src": "1851:376:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2258:485:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 188,
															"name": "isFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2277:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e6572206973206e6f742066756e64656420796574",
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2287:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															},
															"value": "Burner is not funded yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2269:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "2269:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 193,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "2333:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 194,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "2339:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2333:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e6572206973206e6f74207965742073746172746564",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2350:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24135dd484bb85aaf432e750387a1f0010ab2f44e1f35a39049bd586bb779f1b",
																"typeString": "literal_string \"Burner is not yet started\""
															},
															"value": "Burner is not yet started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24135dd484bb85aaf432e750387a1f0010ab2f44e1f35a39049bd586bb779f1b",
																"typeString": "literal_string \"Burner is not yet started\""
															}
														],
														"id": 192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2325:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2325:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 200,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -17,
																	"src": "2397:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 201,
																	"name": "lastTimeBurned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "2403:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2397:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33363030",
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2420:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															},
															"src": "2397:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f7572",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a67d95f2293c637cd38d40b5cce5f7b6bf2fc1953650a6994d31e9ed06ca1ce0",
																"typeString": "literal_string \"dETH can only be burned once an hour\""
															},
															"value": "dETH can only be burned once an hour"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a67d95f2293c637cd38d40b5cce5f7b6bf2fc1953650a6994d31e9ed06ca1ce0",
																"typeString": "literal_string \"dETH can only be burned once an hour\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2389:76:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "burnAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 239,
														"src": "2476:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 210,
														"name": "fundingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "2497:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "38373630",
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2513:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8760_by_1",
															"typeString": "int_const 8760"
														},
														"value": "8760"
													},
													"src": "2497:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2476:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 218,
															"name": "deadAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2557:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 219,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2570:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 215,
																	"name": "dethAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2535:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 214,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "2528:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$536_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2528:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 485,
														"src": "2528:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "2528:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 222,
														"name": "lastTimeBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2592:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 223,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -17,
														"src": "2609:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2592:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "2592:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 226,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2623:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 227,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "2638:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2623:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "2623:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 230,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2659:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 231,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "2669:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2659:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2659:20:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2708:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 236,
															"name": "lastTimeBurned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "2720:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 234,
														"name": "dethBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "2697:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2697:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "EmitStatement",
												"src": "2692:43:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "44df8e70",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:0:0"
									},
									"scope": 241,
									"src": "2235:508:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 242,
							"src": "364:2384:0"
						}
					],
					"src": "42:2706:0"
				},
				"id": 0
			},
			"contracts/libs/Address.sol": {
				"ast": {
					"absolutePath": "contracts/libs/Address.sol",
					"exportedSymbols": {
						"Address": [
							435
						]
					},
					"id": 436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 243,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "740:356:1",
										"statements": [
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 259,
														"src": "942:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "942:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "942:12:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1031:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1033:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1053:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1041:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1041:20:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1033:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 246,
														"isOffset": false,
														"isSlot": false,
														"src": "1053:7:1",
														"valueSize": 1
													},
													{
														"declaration": 252,
														"isOffset": false,
														"isSlot": false,
														"src": "1033:4:1",
														"valueSize": 1
													}
												],
												"id": 254,
												"nodeType": "InlineAssembly",
												"src": "1022:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "1080:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 250,
												"id": 258,
												"nodeType": "Return",
												"src": "1073:15:1"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "87:581:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "694:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "693:17:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "734:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:6:1"
									},
									"scope": 435,
									"src": "674:422:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2102:326:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 271,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2129:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$435",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$435",
																				"typeString": "library Address"
																			}
																		],
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2121:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 269,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2121:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2121:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2121:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 274,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "2146:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2121:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2154:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2113:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2113:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2113:73:1"
											},
											{
												"assignments": [
													280,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 293,
														"src": "2278:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 279,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2278:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 287,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2328:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 281,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2296:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2296:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 283,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "2319:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2296:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2277:54:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 289,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "2350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2359:60:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2342:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "2342:78:1"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1104:921:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "2050:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2050:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "2077:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2049:43:1"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2102:0:1"
									},
									"scope": 435,
									"src": "2031:397:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3278:84:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 305,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "3307:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 306,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "3315:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 304,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															311,
															331
														],
														"referencedDeclaration": 331,
														"src": "3294:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 309,
												"nodeType": "Return",
												"src": "3287:67:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2436:747:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "3211:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "3227:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3210:35:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "3264:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3264:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3263:14:1"
									},
									"scope": 435,
									"src": "3189:173:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "3709:79:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 324,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3750:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 325,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3758:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3764:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 327,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "3767:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 323,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "3727:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3727:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 322,
												"id": 329,
												"nodeType": "Return",
												"src": "3720:60:1"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3370:216:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "3614:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "3630:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "3649:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3649:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3613:63:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "3695:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3695:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3694:14:1"
									},
									"scope": 435,
									"src": "3592:196:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "4276:113:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 344,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4316:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4324:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 346,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4330:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4337:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 343,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															351,
															384
														],
														"referencedDeclaration": 384,
														"src": "4294:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 342,
												"id": 349,
												"nodeType": "Return",
												"src": "4287:94:1"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "3796:361:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "4194:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "4210:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "4229:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4193:50:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "4262:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4261:14:1"
									},
									"scope": 435,
									"src": "4163:226:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "4786:175:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 368,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4813:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$435",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$435",
																				"typeString": "library Address"
																			}
																		],
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4805:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 366,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4805:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4805:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4805:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 371,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "4830:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4805:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4797:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4797:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "4797:81:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "4919:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "4927:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "4933:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 380,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "4940:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 376,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "4896:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4896:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 364,
												"id": 382,
												"nodeType": "Return",
												"src": "4889:64:1"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "4397:242:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "4676:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "4692:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4692:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "4711:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "4726:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4726:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4675:78:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 384,
												"src": "4772:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4772:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4771:14:1"
									},
									"scope": 435,
									"src": "4645:316:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "5113:835:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 399,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5143:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 398,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "5132:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5132:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5152:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5124:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5124:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "5124:60:1"
											},
											{
												"assignments": [
													405,
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 433,
														"src": "5258:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 404,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5258:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 433,
														"src": "5272:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 406,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5272:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "5330:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 408,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "5299:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5299:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 410,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "5319:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5299:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5257:78:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 415,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 405,
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "5409:532:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 419,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "5495:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5495:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5515:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5495:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 429,
																"nodeType": "Block",
																"src": "5875:55:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 426,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 392,
																					"src": "5901:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 425,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "5894:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5894:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 428,
																		"nodeType": "ExpressionStatement",
																		"src": "5894:20:1"
																	}
																]
															},
															"id": 430,
															"nodeType": "IfStatement",
															"src": "5491:439:1",
															"trueBody": {
																"id": 424,
																"nodeType": "Block",
																"src": "5518:351:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5706:148:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5729:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "5758:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5752:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5752:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "5733:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5802:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "5806:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5798:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5798:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "5819:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5791:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5791:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5791:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 407,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5758:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 407,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5806:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 423,
																		"nodeType": "InlineAssembly",
																		"src": "5697:157:1"
																	}
																]
															}
														}
													]
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "5346:595:1",
												"trueBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "5359:44:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 416,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "5381:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 396,
															"id": 417,
															"nodeType": "Return",
															"src": "5374:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "5001:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "5017:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5017:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "5036:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "5054:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5054:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5000:81:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "5099:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5099:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5098:14:1"
									},
									"scope": 435,
									"src": "4969:979:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 436,
							"src": "64:5887:1"
						}
					],
					"src": "35:5916:1"
				},
				"id": 1
			},
			"contracts/libs/Context.sol": {
				"ast": {
					"absolutePath": "contracts/libs/Context.sol",
					"exportedSymbols": {
						"Context": [
							458
						]
					},
					"id": 459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 437,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 458,
							"linearizedBaseContracts": [
								458
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "677:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 442,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "695:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "695:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 441,
												"id": 444,
												"nodeType": "Return",
												"src": "688:17:2"
											}
										]
									},
									"documentation": null,
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:2:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "660:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "659:17:2"
									},
									"scope": 458,
									"src": "607:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "786:168:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 451,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "797:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$458",
														"typeString": "contract Context"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "797:4:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 453,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "938:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "938:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 450,
												"id": 455,
												"nodeType": "Return",
												"src": "931:15:2"
											}
										]
									},
									"documentation": null,
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:2:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "772:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "772:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "771:14:2"
									},
									"scope": 458,
									"src": "721:233:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 459,
							"src": "574:383:2"
						}
					],
					"src": "35:922:2"
				},
				"id": 2
			},
			"contracts/libs/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/libs/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							536
						]
					},
					"id": 537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 460,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "62:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 536,
							"linearizedBaseContracts": [
								536
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "160:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 467,
												"src": "280:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:9:3"
									},
									"scope": 536,
									"src": "234:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "297:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "396:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "395:17:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "436:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:9:3"
									},
									"scope": 536,
									"src": "377:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "453:215:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "692:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "711:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:35:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "745:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:6:3"
									},
									"scope": 536,
									"src": "674:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "759:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 495,
												"src": "1054:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 495,
												"src": "1069:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1053:32:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 495,
												"src": "1109:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1108:9:3"
									},
									"scope": 536,
									"src": "1035:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "1126:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1804:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1821:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1803:33:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1854:6:3"
									},
									"scope": 536,
									"src": "1787:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "1869:304:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 517,
												"src": "2201:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 517,
												"src": "2217:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 517,
												"src": "2236:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2200:51:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 517,
												"src": "2270:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2270:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2269:6:3"
									},
									"scope": 536,
									"src": "2179:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "2284:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 526,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 526,
												"src": "2468:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 526,
												"src": "2490:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 526,
												"src": "2510:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2467:57:3"
									},
									"src": "2453:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2533:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 535,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "2705:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "2728:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2728:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 535,
												"src": "2753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2704:63:3"
									},
									"src": "2690:78:3"
								}
							],
							"scope": 537,
							"src": "136:2635:3"
						}
					],
					"src": "35:2736:3"
				},
				"id": 3
			},
			"contracts/libs/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/libs/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							645
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 538,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "contracts/libs/Context.sol",
							"file": "./Context.sol",
							"id": 539,
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 459,
							"src": "62:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 541,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 458,
										"src": "616:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$458",
											"typeString": "contract Context"
										}
									},
									"id": 542,
									"nodeType": "InheritanceSpecifier",
									"src": "616:7:4"
								}
							],
							"contractDependencies": [
								458
							],
							"contractKind": "contract",
							"documentation": {
								"id": 540,
								"nodeType": "StructuredDocumentation",
								"src": "87:505:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 645,
							"linearizedBaseContracts": [
								645,
								458
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 645,
									"src": "631:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 543,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "631:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 550,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 550,
												"src": "689:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 550,
												"src": "720:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:57:4"
									},
									"src": "662:84:4"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "877:139:4",
										"statements": [
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 571,
														"src": "888:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 554,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "888:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 556,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "908:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "908:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:32:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 559,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "931:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 560,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "940:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "931:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "931:18:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "994:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "986:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 564,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "986:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "986:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "998:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 563,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "965:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "965:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "960:48:4"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "754:93:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 572,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:4"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:0:4"
									},
									"scope": 645,
									"src": "853:163:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "1144:32:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 578,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "1162:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 577,
												"id": 579,
												"nodeType": "Return",
												"src": "1155:13:4"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1024:67:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1111:2:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 581,
												"src": "1135:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1134:9:4"
									},
									"scope": 645,
									"src": "1097:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "1290:98:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 585,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "1309:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 586,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "1319:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1319:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1309:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1333:34:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1301:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "1301:67:4"
											},
											{
												"id": 592,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:4"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "1184:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 594,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1287:2:4"
									},
									"src": "1269:119:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "1793:94:4",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 601,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "1830:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1846:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1838:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1838:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1838:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 600,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1809:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "EmitStatement",
												"src": "1804:45:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 608,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "1860:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1877:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1869:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 609,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1869:7:4",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1869:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1860:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "1860:19:4"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "1396:337:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 598,
											"modifierName": {
												"argumentTypes": null,
												"id": 597,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 594,
												"src": "1783:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1783:9:4"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:0:4"
									},
									"scope": 645,
									"src": "1739:148:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "2112:174:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 625,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "2131:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2151:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2143:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 626,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2143:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2143:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2131:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2155:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2123:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "2123:73:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 635,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2233:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 636,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "2241:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 634,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "2212:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "2207:43:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 639,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "2261:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 640,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2270:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2261:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "2261:17:4"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "1895:141:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 622,
											"modifierName": {
												"argumentTypes": null,
												"id": 621,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 594,
												"src": "2102:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2102:9:4"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 644,
												"src": "2069:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2068:18:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:0:4"
									},
									"scope": 645,
									"src": "2042:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 646,
							"src": "596:1693:4"
						}
					],
					"src": "35:2256:4"
				},
				"id": 4
			},
			"contracts/libs/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libs/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							841
						]
					},
					"id": 842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 648,
								"nodeType": "StructuredDocumentation",
								"src": "62:575:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 841,
							"linearizedBaseContracts": [
								841
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "971:114:5",
										"statements": [
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 673,
														"src": "982:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "982:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 660,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "994:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 661,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "998:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "982:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 665,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "1018:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 666,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "1023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1018:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1026:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1010:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1010:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 671,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 659,
													"src": "1076:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 657,
												"id": 672,
												"nodeType": "Return",
												"src": "1069:8:5"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "665:233:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "917:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "928:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:22:5"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "962:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "961:9:5"
									},
									"scope": 841,
									"src": "904:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "1435:69:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 685,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "1457:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 686,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "1460:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1463:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 684,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															691,
															719
														],
														"referencedDeclaration": 719,
														"src": "1453:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1453:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 683,
												"id": 689,
												"nodeType": "Return",
												"src": "1446:50:5"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "1093:269:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "1381:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "1392:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1380:22:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "1426:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1425:9:5"
									},
									"scope": 841,
									"src": "1368:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "1902:97:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 704,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "1921:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 705,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "1926:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1921:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 707,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "1929:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1913:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1913:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1913:29:5"
											},
											{
												"assignments": [
													711
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 718,
														"src": "1953:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 710,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1953:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 712,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "1965:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 713,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1969:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1965:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1953:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 716,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 711,
													"src": "1990:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 702,
												"id": 717,
												"nodeType": "Return",
												"src": "1983:8:5"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "1512:289:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 719,
												"src": "1820:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 719,
												"src": "1831:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 719,
												"src": "1842:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 697,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1842:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1819:50:5"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 719,
												"src": "1893:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1892:9:5"
									},
									"scope": 841,
									"src": "1807:192:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "2325:404:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 729,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "2561:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2566:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2561:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 735,
												"nodeType": "IfStatement",
												"src": "2557:47:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "2569:35:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2591:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 728,
															"id": 733,
															"nodeType": "Return",
															"src": "2584:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													737
												],
												"declarations": [
													{
														"constant": false,
														"id": 737,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 753,
														"src": "2616:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2616:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 738,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "2628:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 739,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "2632:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2616:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 743,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "2652:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 744,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "2656:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2652:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 746,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "2661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2652:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2664:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2644:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2644:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "2644:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 751,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 737,
													"src": "2720:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 728,
												"id": 752,
												"nodeType": "Return",
												"src": "2713:8:5"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "2007:245:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 754,
												"src": "2271:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 754,
												"src": "2282:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2270:22:5"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 754,
												"src": "2316:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2315:9:5"
									},
									"scope": 841,
									"src": "2258:471:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "3272:65:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 765,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "3294:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 766,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "3297:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 764,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															771,
															799
														],
														"referencedDeclaration": 799,
														"src": "3290:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3290:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 769,
												"nodeType": "Return",
												"src": "3283:46:5"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "2737:462:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 771,
												"src": "3218:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 771,
												"src": "3229:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3229:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3217:22:5"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 771,
												"src": "3263:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:9:5"
									},
									"scope": 841,
									"src": "3205:132:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "3928:183:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 784,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "3947:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3951:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3947:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 787,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "3954:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3939:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "3939:28:5"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 798,
														"src": "3978:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3978:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 792,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3990:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 793,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "3994:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3990:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3978:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 796,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 791,
													"src": "4102:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 782,
												"id": 797,
												"nodeType": "Return",
												"src": "4095:8:5"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "3345:482:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "3846:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3846:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "3857:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3857:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "3868:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3868:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3845:50:5"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "3919:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3918:9:5"
									},
									"scope": 841,
									"src": "3833:278:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "4643:63:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 810,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4665:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 811,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4668:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4671:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 809,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															816,
															840
														],
														"referencedDeclaration": 840,
														"src": "4661:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4661:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 808,
												"id": 814,
												"nodeType": "Return",
												"src": "4654:44:5"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "4119:451:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "4589:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "4600:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4588:22:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "4634:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4633:9:5"
									},
									"scope": 841,
									"src": "4576:130:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "5286:71:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 829,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "5305:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5310:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 832,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "5313:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5297:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5297:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "5297:29:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 835,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "5344:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 836,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "5348:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5344:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 827,
												"id": 838,
												"nodeType": "Return",
												"src": "5337:12:5"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "4714:471:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 840,
												"src": "5204:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 840,
												"src": "5215:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 840,
												"src": "5226:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 822,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5226:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5203:50:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 840,
												"src": "5277:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5277:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5276:9:5"
									},
									"scope": 841,
									"src": "5191:166:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 842,
							"src": "641:4719:5"
						}
					],
					"src": "35:5325:5"
				},
				"id": 5
			}
		}
	}
}