{
	"id": "c62baf5cc8b228bb5189e24033bcccb9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Burna.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.6.12;\r\n\r\nimport \"./libs/SafeMath.sol\";\r\nimport \"./libs/Address.sol\";\r\nimport \"./libs/Ownable.sol\";\r\nimport \"./libs/IERC20.sol\";\r\n\r\n/*\r\n ______  _     _  ______ __   _ _______\r\n |_____] |     | |_____/ | \\  | |_____|\r\n |_____] |_____| |    \\_ |  \\_| |     |\r\n*/                                     \r\n\r\ncontract Burna is Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD;\r\n    address public dethAddress;\r\n\r\n    bool public isFunded = false;    \r\n    uint256 public supply;\r\n    uint256 public totalBurned;\r\n    uint256 public startTime;\r\n    uint256 public lastTimeBurned = 0;\r\n\r\n    event BurnerFunded(uint256 _amount, uint256 _time);\r\n    event dethBurned(uint256 _amount, uint256 _time);\r\n\r\n    constructor(address _deth, uint256 _startTime) public {\r\n        dethAddress = _deth;\r\n        startTime = _startTime;\r\n        totalBurned = 0;\r\n    }\r\n\r\n    function getTotalBurned() public view returns (uint256) {\r\n        require(isFunded, \"Burner is not funded yet\");\r\n        return totalBurned;\r\n    }\r\n\r\n    function getSupply() public returns (uint256) {\r\n        require(isFunded, \"Burner is not funded yet\");\r\n        supply = IERC20(dethAddress).balanceOf(address(this));\r\n        return supply;\r\n    }\r\n\r\n    function getStartTime() public view returns (uint256) {\r\n        return startTime;\r\n    }\r\n\r\n    function getDethAddress() public view returns (address) {\r\n        require(dethAddress != address(0), \"...How did you deploy without setting the deth address?\");\r\n        return dethAddress;\r\n    }\r\n\r\n    function getDeadAddress() public view returns (address) {\r\n        return deadAddress;\r\n    }\r\n\r\n    function getIsFunded() public view returns (bool) {\r\n        return isFunded;\r\n    }\r\n\r\n    function fund(uint256 _amount) external onlyOwner {\r\n        require(isFunded == false);\r\n        require(now < startTime);\r\n        require(_amount == 500000 ether);\r\n        IERC20(dethAddress).transfer(address(this), _amount);\r\n        isFunded = true;\r\n\r\n        emit BurnerFunded(_amount, now);\r\n    }\r\n\r\n    function burn() public {\r\n        require(isFunded, \"Burner is not funded yet\");\r\n        require(now > startTime, \"Burner is not yet started\");\r\n        require(now - lastTimeBurned > 3600, \"dETH can only be burned once an hour\");\r\n        uint256 burnAmount = (IERC20(dethAddress).balanceOf(address(this))) / 2;\r\n        lastTimeBurned = now;\r\n\r\n        emit dethBurned(burnAmount, lastTimeBurned);\r\n    }\r\n\r\n}"
			},
			"contracts/libs/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"contracts/libs/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\nimport \"./Context.sol\";\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n"
			},
			"contracts/libs/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/libs/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
			},
			"contracts/libs/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Burna.sol": {
				"Burna": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_deth",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"name": "BurnerFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"name": "dethBurned",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deadAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dethAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeadAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDethAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIsFunded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFunded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Burna.sol\":362:2615  contract Burna is Ownable {\r... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Burna.sol\":501:543  0x000000000000000000000000000000000000dEaD */\n  0xdead\n    /* \"contracts/Burna.sol\":462:543  address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n    /* \"contracts/Burna.sol\":608:613  false */\n  0x00\n    /* \"contracts/Burna.sol\":585:613  bool public isFunded = false */\n  0x01\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Burna.sol\":748:749  0 */\n  0x00\n    /* \"contracts/Burna.sol\":716:749  uint256 public lastTimeBurned = 0 */\n  0x05\n  sstore\n    /* \"contracts/Burna.sol\":872:1023  constructor(address _deth, uint256 _startTime) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/libs/Ownable.sol\":888:905  address msgSender */\n  0x00\n    /* \"contracts/libs/Ownable.sol\":908:920  _msgSender() */\n  tag_6\n    /* \"contracts/libs/Ownable.sol\":908:918  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/libs/Ownable.sol\":908:920  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/libs/Ownable.sol\":888:920  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/libs/Ownable.sol\":940:949  msgSender */\n  dup1\n    /* \"contracts/libs/Ownable.sol\":931:937  _owner */\n  0x00\n  dup1\n    /* \"contracts/libs/Ownable.sol\":931:949  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/libs/Ownable.sol\":998:1007  msgSender */\n  dup1\n    /* \"contracts/libs/Ownable.sol\":965:1008  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/libs/Ownable.sol\":994:995  0 */\n  0x00\n    /* \"contracts/libs/Ownable.sol\":965:1008  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/libs/Ownable.sol\":853:1016  constructor () internal {\r... */\n  pop\n    /* \"contracts/Burna.sol\":951:956  _deth */\n  dup2\n    /* \"contracts/Burna.sol\":937:948  dethAddress */\n  0x01\n  0x00\n    /* \"contracts/Burna.sol\":937:956  dethAddress = _deth */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Burna.sol\":979:989  _startTime */\n  dup1\n    /* \"contracts/Burna.sol\":967:976  startTime */\n  0x04\n    /* \"contracts/Burna.sol\":967:989  startTime = _startTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Burna.sol\":1014:1015  0 */\n  0x00\n    /* \"contracts/Burna.sol\":1000:1011  totalBurned */\n  0x03\n    /* \"contracts/Burna.sol\":1000:1015  totalBurned = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Burna.sol\":872:1023  constructor(address _deth, uint256 _startTime) public {\r... */\n  pop\n  pop\n    /* \"contracts/Burna.sol\":362:2615  contract Burna is Ownable {\r... */\n  jump(tag_9)\n    /* \"contracts/libs/Context.sol\":607:713  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_7:\n    /* \"contracts/libs/Context.sol\":660:675  address payable */\n  0x00\n    /* \"contracts/libs/Context.sol\":695:705  msg.sender */\n  caller\n    /* \"contracts/libs/Context.sol\":688:705  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/libs/Context.sol\":607:713  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/Burna.sol\":362:2615  contract Burna is Ownable {\r... */\ntag_9:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Burna.sol\":362:2615  contract Burna is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9020e645\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xca1d209d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xca1d209d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcd066e45\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf0f2d413\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x9020e645\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb0feb130\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb55cd04b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc828371e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x6c9c2faf\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x6c9c2faf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7c654303\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x047fc9aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27c8f835\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3d4b5cc6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x44df8e70\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Burna.sol\":624:645  uint256 public supply */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":462:543  address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":716:749  uint256 public lastTimeBurned = 0 */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":2203:2610  function burn() public {\r... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Burna.sol\":1188:1386  function getSupply() public returns (uint256) {\r... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libs/Ownable.sol\":1739:1887  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/Burna.sol\":685:709  uint256 public startTime */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":585:613  bool public isFunded = false */\n    tag_10:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libs/Ownable.sol\":1097:1176  function owner() public view returns (address) {\r... */\n    tag_11:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":550:576  address public dethAddress */\n    tag_12:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1696:1789  function getDeadAddress() public view returns (address) {\r... */\n    tag_13:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1031:1180  function getTotalBurned() public view returns (uint256) {\r... */\n    tag_14:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1394:1483  function getStartTime() public view returns (uint256) {\r... */\n    tag_15:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1889:2195  function fund(uint256 _amount) external onlyOwner {\r... */\n    tag_16:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/Burna.sol\":1491:1688  function getDethAddress() public view returns (address) {\r... */\n    tag_17:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":652:678  uint256 public totalBurned */\n    tag_18:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Burna.sol\":1797:1881  function getIsFunded() public view returns (bool) {\r... */\n    tag_19:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libs/Ownable.sol\":2042:2286  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_20:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/Burna.sol\":624:645  uint256 public supply */\n    tag_25:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":462:543  address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_27:\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":716:749  uint256 public lastTimeBurned = 0 */\n    tag_29:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":2203:2610  function burn() public {\r... */\n    tag_31:\n        /* \"contracts/Burna.sol\":2245:2253  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":2237:2282  require(isFunded, \"Burner is not funded yet\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4275726e6572206973206e6f742066756e646564207965740000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/Burna.sol\":2307:2316  startTime */\n      sload(0x04)\n        /* \"contracts/Burna.sol\":2301:2304  now */\n      timestamp\n        /* \"contracts/Burna.sol\":2301:2316  now > startTime */\n      gt\n        /* \"contracts/Burna.sol\":2293:2346  require(now > startTime, \"Burner is not yet started\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4275726e6572206973206e6f7420796574207374617274656400000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"contracts/Burna.sol\":2388:2392  3600 */\n      0x0e10\n        /* \"contracts/Burna.sol\":2371:2385  lastTimeBurned */\n      sload(0x05)\n        /* \"contracts/Burna.sol\":2365:2368  now */\n      timestamp\n        /* \"contracts/Burna.sol\":2365:2385  now - lastTimeBurned */\n      sub\n        /* \"contracts/Burna.sol\":2365:2392  now - lastTimeBurned > 3600 */\n      gt\n        /* \"contracts/Burna.sol\":2357:2433  require(now - lastTimeBurned > 3600, \"dETH can only be burned once an hour\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a67d95f2293c637cd38d40b5cce5f7b6bf2fc1953650a6994d31e9ed06ca1ce0\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"contracts/Burna.sol\":2444:2462  uint256 burnAmount */\n      0x00\n        /* \"contracts/Burna.sol\":2514:2515  2 */\n      0x02\n        /* \"contracts/Burna.sol\":2473:2484  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":2466:2495  IERC20(dethAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Burna.sol\":2504:2508  this */\n      address\n        /* \"contracts/Burna.sol\":2466:2510  IERC20(dethAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/Burna.sol\":2465:2515  (IERC20(dethAddress).balanceOf(address(this))) / 2 */\n      dup2\n      tag_70\n      jumpi\n      invalid\n    tag_70:\n      div\n        /* \"contracts/Burna.sol\":2444:2515  uint256 burnAmount = (IERC20(dethAddress).balanceOf(address(this))) / 2 */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":2543:2546  now */\n      timestamp\n        /* \"contracts/Burna.sol\":2526:2540  lastTimeBurned */\n      0x05\n        /* \"contracts/Burna.sol\":2526:2546  lastTimeBurned = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":2564:2602  dethBurned(burnAmount, lastTimeBurned) */\n      0x9d7b6228054d3633be8cd708771f400e539e62d2df76aca71f3d8b0eb287eb24\n        /* \"contracts/Burna.sol\":2575:2585  burnAmount */\n      dup2\n        /* \"contracts/Burna.sol\":2587:2601  lastTimeBurned */\n      sload(0x05)\n        /* \"contracts/Burna.sol\":2564:2602  dethBurned(burnAmount, lastTimeBurned) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Burna.sol\":2203:2610  function burn() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Burna.sol\":1188:1386  function getSupply() public returns (uint256) {\r... */\n    tag_33:\n        /* \"contracts/Burna.sol\":1225:1232  uint256 */\n      0x00\n        /* \"contracts/Burna.sol\":1253:1261  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":1245:1290  require(isFunded, \"Burner is not funded yet\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4275726e6572206973206e6f742066756e646564207965740000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"contracts/Burna.sol\":1317:1328  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":1310:1339  IERC20(dethAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Burna.sol\":1348:1352  this */\n      address\n        /* \"contracts/Burna.sol\":1310:1354  IERC20(dethAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/Burna.sol\":1301:1307  supply */\n      0x02\n        /* \"contracts/Burna.sol\":1301:1354  supply = IERC20(dethAddress).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":1372:1378  supply */\n      sload(0x02)\n        /* \"contracts/Burna.sol\":1365:1378  return supply */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1188:1386  function getSupply() public returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/libs/Ownable.sol\":1739:1887  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_35:\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      tag_78\n        /* \"contracts/libs/Ownable.sol\":1319:1329  _msgSender */\n      tag_79\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1315  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libs/Ownable.sol\":1301:1368  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/libs/Ownable.sol\":1846:1847  0 */\n      0x00\n        /* \"contracts/libs/Ownable.sol\":1809:1849  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1830:1836  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1809:1849  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/libs/Ownable.sol\":1877:1878  0 */\n      0x00\n        /* \"contracts/libs/Ownable.sol\":1860:1866  _owner */\n      dup1\n      0x00\n        /* \"contracts/libs/Ownable.sol\":1860:1879  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/libs/Ownable.sol\":1739:1887  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/Burna.sol\":685:709  uint256 public startTime */\n    tag_37:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":585:613  bool public isFunded = false */\n    tag_39:\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/libs/Ownable.sol\":1097:1176  function owner() public view returns (address) {\r... */\n    tag_41:\n        /* \"contracts/libs/Ownable.sol\":1135:1142  address */\n      0x00\n        /* \"contracts/libs/Ownable.sol\":1162:1168  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1155:1168  return _owner */\n      swap1\n      pop\n        /* \"contracts/libs/Ownable.sol\":1097:1176  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":550:576  address public dethAddress */\n    tag_43:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":1696:1789  function getDeadAddress() public view returns (address) {\r... */\n    tag_45:\n        /* \"contracts/Burna.sol\":1743:1750  address */\n      0x00\n        /* \"contracts/Burna.sol\":1770:1781  deadAddress */\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n        /* \"contracts/Burna.sol\":1763:1781  return deadAddress */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1696:1789  function getDeadAddress() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":1031:1180  function getTotalBurned() public view returns (uint256) {\r... */\n    tag_47:\n        /* \"contracts/Burna.sol\":1078:1085  uint256 */\n      0x00\n        /* \"contracts/Burna.sol\":1106:1114  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":1098:1143  require(isFunded, \"Burner is not funded yet\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4275726e6572206973206e6f742066756e646564207965740000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/Burna.sol\":1161:1172  totalBurned */\n      sload(0x03)\n        /* \"contracts/Burna.sol\":1154:1172  return totalBurned */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1031:1180  function getTotalBurned() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":1394:1483  function getStartTime() public view returns (uint256) {\r... */\n    tag_49:\n        /* \"contracts/Burna.sol\":1439:1446  uint256 */\n      0x00\n        /* \"contracts/Burna.sol\":1466:1475  startTime */\n      sload(0x04)\n        /* \"contracts/Burna.sol\":1459:1475  return startTime */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1394:1483  function getStartTime() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":1889:2195  function fund(uint256 _amount) external onlyOwner {\r... */\n    tag_52:\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      tag_88\n        /* \"contracts/libs/Ownable.sol\":1319:1329  _msgSender */\n      tag_79\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1315  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libs/Ownable.sol\":1301:1368  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/Burna.sol\":1970:1975  false */\n      0x00\n        /* \"contracts/Burna.sol\":1958:1975  isFunded == false */\n      iszero\n      iszero\n        /* \"contracts/Burna.sol\":1958:1966  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":1958:1975  isFunded == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Burna.sol\":1950:1976  require(isFunded == false) */\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n        /* \"contracts/Burna.sol\":2001:2010  startTime */\n      sload(0x04)\n        /* \"contracts/Burna.sol\":1995:1998  now */\n      timestamp\n        /* \"contracts/Burna.sol\":1995:2010  now < startTime */\n      lt\n        /* \"contracts/Burna.sol\":1987:2011  require(now < startTime) */\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n        /* \"contracts/Burna.sol\":2041:2053  500000 ether */\n      0x69e10de76676d0800000\n        /* \"contracts/Burna.sol\":2030:2037  _amount */\n      dup2\n        /* \"contracts/Burna.sol\":2030:2053  _amount == 500000 ether */\n      eq\n        /* \"contracts/Burna.sol\":2022:2054  require(_amount == 500000 ether) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n        /* \"contracts/Burna.sol\":2072:2083  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":2065:2093  IERC20(dethAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Burna.sol\":2102:2106  this */\n      address\n        /* \"contracts/Burna.sol\":2109:2116  _amount */\n      dup4\n        /* \"contracts/Burna.sol\":2065:2117  IERC20(dethAddress).transfer(address(this), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Burna.sol\":2139:2143  true */\n      0x01\n        /* \"contracts/Burna.sol\":2128:2136  isFunded */\n      dup1\n      0x14\n        /* \"contracts/Burna.sol\":2128:2143  isFunded = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Burna.sol\":2161:2187  BurnerFunded(_amount, now) */\n      0x73d856f5acf4bb0dfcc775791dbf5aa882b81951d141781124f00428c3075eb7\n        /* \"contracts/Burna.sol\":2174:2181  _amount */\n      dup2\n        /* \"contracts/Burna.sol\":2183:2186  now */\n      timestamp\n        /* \"contracts/Burna.sol\":2161:2187  BurnerFunded(_amount, now) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Burna.sol\":1889:2195  function fund(uint256 _amount) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Burna.sol\":1491:1688  function getDethAddress() public view returns (address) {\r... */\n    tag_54:\n        /* \"contracts/Burna.sol\":1538:1545  address */\n      0x00\n        /* \"contracts/Burna.sol\":1589:1590  0 */\n      dup1\n        /* \"contracts/Burna.sol\":1566:1591  dethAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":1566:1577  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":1566:1591  dethAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Burna.sol\":1558:1651  require(dethAddress != address(0), \"...How did you deploy without setting the deth address?\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x37\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ce8141a160353bd316ca4cc73e4787e267ba1cda802cb11cb760d98ab3af9fba\n      0x37\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/Burna.sol\":1669:1680  dethAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Burna.sol\":1662:1680  return dethAddress */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1491:1688  function getDethAddress() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Burna.sol\":652:678  uint256 public totalBurned */\n    tag_56:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Burna.sol\":1797:1881  function getIsFunded() public view returns (bool) {\r... */\n    tag_58:\n        /* \"contracts/Burna.sol\":1841:1845  bool */\n      0x00\n        /* \"contracts/Burna.sol\":1865:1873  isFunded */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Burna.sol\":1858:1873  return isFunded */\n      swap1\n      pop\n        /* \"contracts/Burna.sol\":1797:1881  function getIsFunded() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/libs/Ownable.sol\":2042:2286  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_61:\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      tag_102\n        /* \"contracts/libs/Ownable.sol\":1319:1329  _msgSender */\n      tag_79\n        /* \"contracts/libs/Ownable.sol\":1319:1331  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1315  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":1309:1331  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libs/Ownable.sol\":1301:1368  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/libs/Ownable.sol\":2151:2152  0 */\n      0x00\n        /* \"contracts/libs/Ownable.sol\":2131:2153  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":2131:2139  newOwner */\n      dup2\n        /* \"contracts/libs/Ownable.sol\":2131:2153  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/libs/Ownable.sol\":2123:2196  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/libs/Ownable.sol\":2241:2249  newOwner */\n      dup1\n        /* \"contracts/libs/Ownable.sol\":2212:2250  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":2233:2239  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libs/Ownable.sol\":2212:2250  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/libs/Ownable.sol\":2270:2278  newOwner */\n      dup1\n        /* \"contracts/libs/Ownable.sol\":2261:2267  _owner */\n      0x00\n      dup1\n        /* \"contracts/libs/Ownable.sol\":2261:2278  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/libs/Ownable.sol\":2042:2286  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/libs/Context.sol\":607:713  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_79:\n        /* \"contracts/libs/Context.sol\":660:675  address payable */\n      0x00\n        /* \"contracts/libs/Context.sol\":695:705  msg.sender */\n      caller\n        /* \"contracts/libs/Context.sol\":688:705  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/libs/Context.sol\":607:713  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_a67d95f2293c637cd38d40b5cce5f7b6bf2fc1953650a6994d31e9ed06ca1ce0 644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f7572\n    data_ce8141a160353bd316ca4cc73e4787e267ba1cda802cb11cb760d98ab3af9fba 2e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e6720746865206465746820616464726573733f\n\n    auxdata: 0xa2646970667358221220c54bc8e4773167fee6172a94ceed898b5e878312a50aec754f56f65af79dda9464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60a060405261dead73ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b8152506000600160146101000a81548160ff021916908315150217905550600060055534801561006857600080fd5b506040516112213803806112218339818101604052604081101561008b57600080fd5b81019080805190602001909291908051906020019092919050505060006100b66101ab60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600481905550600060038190555050506101b3565b600033905090565b60805160601c61104c6101d5600039806103bf52806109a3525061104c6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639020e645116100a2578063ca1d209d11610071578063ca1d209d146102d3578063cd066e4514610301578063d89135cd14610335578063f0f2d41314610353578063f2fde38b1461037357610116565b80639020e6451461022f578063b0feb13014610263578063b55cd04b14610297578063c828371e146102b557610116565b80636c9c2faf116100e95780636c9c2faf14610195578063715018a6146101b357806378e97925146101bd5780637c654303146101db5780638da5cb5b146101fb57610116565b8063047fc9aa1461011b57806327c8f835146101395780633d4b5cc61461016d57806344df8e701461018b575b600080fd5b6101236103b7565b6040518082815260200191505060405180910390f35b6101416103bd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101756103e1565b6040518082815260200191505060405180910390f35b6101936103e7565b005b61019d61065b565b6040518082815260200191505060405180910390f35b6101bb6107b1565b005b6101c5610937565b6040518082815260200191505060405180910390f35b6101e361093d565b60405180821515815260200191505060405180910390f35b610203610950565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610237610979565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61026b61099f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61029f6109c7565b6040518082815260200191505060405180910390f35b6102bd610a53565b6040518082815260200191505060405180910390f35b6102ff600480360360208110156102e957600080fd5b8101908080359060200190929190505050610a5d565b005b610309610c94565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61033d610d65565b6040518082815260200191505060405180910390f35b61035b610d6b565b60405180821515815260200191505060405180910390f35b6103b56004803603602081101561038957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d82565b005b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b600160149054906101000a900460ff16610469576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b60045442116104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4275726e6572206973206e6f742079657420737461727465640000000000000081525060200191505060405180910390fd5b610e1060055442031161053e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610fbc6024913960400191505060405180910390fd5b60006002600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105cb57600080fd5b505afa1580156105df573d6000803e3d6000fd5b505050506040513d60208110156105f557600080fd5b81019080805190602001909291905050508161060d57fe5b049050426005819055507f9d7b6228054d3633be8cd708771f400e539e62d2df76aca71f3d8b0eb287eb2481600554604051808381526020018281526020019250505060405180910390a150565b6000600160149054906101000a900460ff166106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561076857600080fd5b505afa15801561077c573d6000803e3d6000fd5b505050506040513d602081101561079257600080fd5b8101908080519060200190929190505050600281905550600254905090565b6107b9610f8d565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610879576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60045481565b600160149054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160149054906101000a900460ff16610a4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b600354905090565b6000600454905090565b610a65610f8d565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60001515600160149054906101000a900460ff16151514610b4557600080fd5b6004544210610b5357600080fd5b6969e10de76676d08000008114610b6957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bfc57600080fd5b505af1158015610c10573d6000803e3d6000fd5b505050506040513d6020811015610c2657600080fd5b81019080805190602001909291905050505060018060146101000a81548160ff0219169083151502179055507f73d856f5acf4bb0dfcc775791dbf5aa882b81951d141781124f00428c3075eb78142604051808381526020018281526020019250505060405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180610fe06037913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600160149054906101000a900460ff16905090565b610d8a610f8d565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ed0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610f966026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f75722e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e6720746865206465746820616464726573733fa2646970667358221220c54bc8e4773167fee6172a94ceed898b5e878312a50aec754f56f65af79dda9464736f6c634300060c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1221 CODESIZE SUB DUP1 PUSH2 0x1221 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH2 0xB6 PUSH2 0x1AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x104C PUSH2 0x1D5 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x3BF MSTORE DUP1 PUSH2 0x9A3 MSTORE POP PUSH2 0x104C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9020E645 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCA1D209D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xCD066E45 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF0F2D413 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x373 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x9020E645 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xB0FEB130 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xB55CD04B EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xC828371E EQ PUSH2 0x2B5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6C9C2FAF GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x7C654303 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FB JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x47FC9AA EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x27C8F835 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x3D4B5CC6 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x7B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F7420796574207374617274656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH1 0x5 SLOAD TIMESTAMP SUB GT PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFBC PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH2 0x60D JUMPI INVALID JUMPDEST DIV SWAP1 POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x9D7B6228054D3633BE8CD708771F400E539E62D2DF76ACA71F3D8B0EB287EB24 DUP2 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0xF8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA65 PUSH2 0xF8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 EQ PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x73D856F5ACF4BB0DFCC775791DBF5AA882B81951D141781124F00428C3075EB7 DUP2 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFE0 PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD8A PUSH2 0xF8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF96 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373644554482063616E206F6E6C79206265 KECCAK256 PUSH3 0x75726E PUSH6 0x64206F6E6365 KECCAK256 PUSH2 0x6E20 PUSH9 0x6F75722E2E2E486F77 KECCAK256 PUSH5 0x696420796F PUSH22 0x206465706C6F7920776974686F75742073657474696E PUSH8 0x2074686520646574 PUSH9 0x20616464726573733F LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x4B 0xC8 0xE4 PUSH24 0x3167FEE6172A94CEED898B5E878312A50AEC754F56F65AF7 SWAP14 0xDA SWAP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "362:2253:0:-:0;;;501:42;462:81;;;;;;;;;;;608:5;585:28;;;;;;;;;;;;;;;;;;;;748:1;716:33;;872:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;888:17:4;908:12;:10;;;:12;;:::i;:::-;888:32;;940:9;931:6;;:18;;;;;;;;;;;;;;;;;;998:9;965:43;;994:1;965:43;;;;;;;;;;;;853:163;951:5:0;937:11;;:19;;;;;;;;;;;;;;;;;;979:10;967:9;:22;;;;1014:1;1000:11;:15;;;;872:151;;362:2253;;607:106:2;660:15;695:10;688:17;;607:106;:::o;362:2253:0:-;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"16": [
									{
										"length": 32,
										"start": 959
									},
									{
										"length": 32,
										"start": 2467
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c80639020e645116100a2578063ca1d209d11610071578063ca1d209d146102d3578063cd066e4514610301578063d89135cd14610335578063f0f2d41314610353578063f2fde38b1461037357610116565b80639020e6451461022f578063b0feb13014610263578063b55cd04b14610297578063c828371e146102b557610116565b80636c9c2faf116100e95780636c9c2faf14610195578063715018a6146101b357806378e97925146101bd5780637c654303146101db5780638da5cb5b146101fb57610116565b8063047fc9aa1461011b57806327c8f835146101395780633d4b5cc61461016d57806344df8e701461018b575b600080fd5b6101236103b7565b6040518082815260200191505060405180910390f35b6101416103bd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101756103e1565b6040518082815260200191505060405180910390f35b6101936103e7565b005b61019d61065b565b6040518082815260200191505060405180910390f35b6101bb6107b1565b005b6101c5610937565b6040518082815260200191505060405180910390f35b6101e361093d565b60405180821515815260200191505060405180910390f35b610203610950565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610237610979565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61026b61099f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61029f6109c7565b6040518082815260200191505060405180910390f35b6102bd610a53565b6040518082815260200191505060405180910390f35b6102ff600480360360208110156102e957600080fd5b8101908080359060200190929190505050610a5d565b005b610309610c94565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61033d610d65565b6040518082815260200191505060405180910390f35b61035b610d6b565b60405180821515815260200191505060405180910390f35b6103b56004803603602081101561038957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d82565b005b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b600160149054906101000a900460ff16610469576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b60045442116104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4275726e6572206973206e6f742079657420737461727465640000000000000081525060200191505060405180910390fd5b610e1060055442031161053e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610fbc6024913960400191505060405180910390fd5b60006002600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105cb57600080fd5b505afa1580156105df573d6000803e3d6000fd5b505050506040513d60208110156105f557600080fd5b81019080805190602001909291905050508161060d57fe5b049050426005819055507f9d7b6228054d3633be8cd708771f400e539e62d2df76aca71f3d8b0eb287eb2481600554604051808381526020018281526020019250505060405180910390a150565b6000600160149054906101000a900460ff166106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561076857600080fd5b505afa15801561077c573d6000803e3d6000fd5b505050506040513d602081101561079257600080fd5b8101908080519060200190929190505050600281905550600254905090565b6107b9610f8d565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610879576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60045481565b600160149054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160149054906101000a900460ff16610a4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4275726e6572206973206e6f742066756e64656420796574000000000000000081525060200191505060405180910390fd5b600354905090565b6000600454905090565b610a65610f8d565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60001515600160149054906101000a900460ff16151514610b4557600080fd5b6004544210610b5357600080fd5b6969e10de76676d08000008114610b6957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bfc57600080fd5b505af1158015610c10573d6000803e3d6000fd5b505050506040513d6020811015610c2657600080fd5b81019080805190602001909291905050505060018060146101000a81548160ff0219169083151502179055507f73d856f5acf4bb0dfcc775791dbf5aa882b81951d141781124f00428c3075eb78142604051808381526020018281526020019250505060405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180610fe06037913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000600160149054906101000a900460ff16905090565b610d8a610f8d565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ed0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610f966026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f75722e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e6720746865206465746820616464726573733fa2646970667358221220c54bc8e4773167fee6172a94ceed898b5e878312a50aec754f56f65af79dda9464736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9020E645 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCA1D209D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xCD066E45 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF0F2D413 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x373 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x9020E645 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xB0FEB130 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xB55CD04B EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xC828371E EQ PUSH2 0x2B5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6C9C2FAF GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x7C654303 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FB JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x47FC9AA EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x27C8F835 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x3D4B5CC6 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x7B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x99F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F7420796574207374617274656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH1 0x5 SLOAD TIMESTAMP SUB GT PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFBC PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH2 0x60D JUMPI INVALID JUMPDEST DIV SWAP1 POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x9D7B6228054D3633BE8CD708771F400E539E62D2DF76ACA71F3D8B0EB287EB24 DUP2 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0xF8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4275726E6572206973206E6F742066756E646564207965740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA65 PUSH2 0xF8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 EQ PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x73D856F5ACF4BB0DFCC775791DBF5AA882B81951D141781124F00428C3075EB7 DUP2 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFE0 PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD8A PUSH2 0xF8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF96 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373644554482063616E206F6E6C79206265 KECCAK256 PUSH3 0x75726E PUSH6 0x64206F6E6365 KECCAK256 PUSH2 0x6E20 PUSH9 0x6F75722E2E2E486F77 KECCAK256 PUSH5 0x696420796F PUSH22 0x206465706C6F7920776974686F75742073657474696E PUSH8 0x2074686520646574 PUSH9 0x20616464726573733F LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x4B 0xC8 0xE4 PUSH24 0x3167FEE6172A94CEED898B5E878312A50AEC754F56F65AF7 SWAP14 0xDA SWAP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "362:2253:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;462:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;716:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2203:407;;;:::i;:::-;;1188:198;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1739:148:4;;;:::i;:::-;;685:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;585:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1097:79:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;550:26:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1696:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1031:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1394:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1889:306;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1491:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;652:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1797:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2042:244:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;624:21:0;;;;:::o;462:81::-;;;:::o;716:33::-;;;;:::o;2203:407::-;2245:8;;;;;;;;;;;2237:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2307:9;;2301:3;:15;2293:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2388:4;2371:14;;2365:3;:20;:27;2357:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2444:18;2514:1;2473:11;;;;;;;;;;;2466:29;;;2504:4;2466:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:50;;;;;;2444:71;;2543:3;2526:14;:20;;;;2564:38;2575:10;2587:14;;2564:38;;;;;;;;;;;;;;;;;;;;;;;;2203:407;:::o;1188:198::-;1225:7;1253:8;;;;;;;;;;;1245:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1317:11;;;;;;;;;;;1310:29;;;1348:4;1310:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:6;:53;;;;1372:6;;1365:13;;1188:198;:::o;1739:148:4:-;1319:12;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:1:::1;1809:40;;1830:6;::::0;::::1;;;;;;;;1809:40;;;;;;;;;;;;1877:1;1860:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1739:148::o:0;685:24:0:-;;;;:::o;585:28::-;;;;;;;;;;;;;:::o;1097:79:4:-;1135:7;1162:6;;;;;;;;;;;1155:13;;1097:79;:::o;550:26:0:-;;;;;;;;;;;;;:::o;1696:93::-;1743:7;1770:11;1763:18;;1696:93;:::o;1031:149::-;1078:7;1106:8;;;;;;;;;;;1098:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1161:11;;1154:18;;1031:149;:::o;1394:89::-;1439:7;1466:9;;1459:16;;1394:89;:::o;1889:306::-;1319:12:4;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5:0::1;1958:17;;:8;;;;;;;;;;;:17;;;1950:26;;;::::0;::::1;;2001:9;;1995:3;:15;1987:24;;;::::0;::::1;;2041:12;2030:7;:23;2022:32;;;::::0;::::1;;2072:11;;;;;;;;;;;2065:28;;;2102:4;2109:7;2065:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;2139:4;2128:8:::0;::::1;:15;;;;;;;;;;;;;;;;;;2161:26;2174:7;2183:3;2161:26;;;;;;;;;;;;;;;;;;;;;;;;1889:306:::0;:::o;1491:197::-;1538:7;1589:1;1566:25;;:11;;;;;;;;;;;:25;;;;1558:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:11;;;;;;;;;;;1662:18;;1491:197;:::o;652:26::-;;;;:::o;1797:84::-;1841:4;1865:8;;;;;;;;;;;1858:15;;1797:84;:::o;2042:244:4:-;1319:12;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:1:::1;2131:22;;:8;:22;;;;2123:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:8;2212:38;;2233:6;::::0;::::1;;;;;;;;2212:38;;;;;;;;;;;;2270:8;2261:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2042:244:::0;:::o;607:106:2:-;660:15;695:10;688:17;;607:106;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "834400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burn()": "infinite",
								"deadAddress()": "infinite",
								"dethAddress()": "1070",
								"fund(uint256)": "infinite",
								"getDeadAddress()": "infinite",
								"getDethAddress()": "infinite",
								"getIsFunded()": "1193",
								"getStartTime()": "1102",
								"getSupply()": "infinite",
								"getTotalBurned()": "1983",
								"isFunded()": "1186",
								"lastTimeBurned()": "1073",
								"owner()": "1166",
								"renounceOwnership()": "24336",
								"startTime()": "1072",
								"supply()": "1029",
								"totalBurned()": "1071",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 501,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "DEAD"
								},
								{
									"begin": 462,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 462,
									"end": 543,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 462,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 462,
									"end": 543,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 462,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 462,
									"end": 543,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 462,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 462,
									"end": 543,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 462,
									"end": 543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 462,
									"end": 543,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 462,
									"end": 543,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 585,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 585,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 585,
									"end": 613,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 585,
									"end": 613,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 585,
									"end": 613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 748,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 716,
									"end": 749,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 888,
									"end": 905,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 908,
									"end": 920,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 908,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 908,
									"end": 918,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 908,
									"end": 918,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 908,
									"end": 920,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 908,
									"end": 920,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 908,
									"end": 920,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 908,
									"end": 920,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 908,
									"end": 920,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 888,
									"end": 920,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 888,
									"end": 920,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 940,
									"end": 949,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 937,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 931,
									"end": 937,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 931,
									"end": 949,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 931,
									"end": 949,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 931,
									"end": 949,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 931,
									"end": 949,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 998,
									"end": 1007,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 994,
									"end": 995,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 1008,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 853,
									"end": 1016,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 951,
									"end": 956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 937,
									"end": 948,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 937,
									"end": 948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 956,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 937,
									"end": 956,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 937,
									"end": 956,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 937,
									"end": 956,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 937,
									"end": 956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 979,
									"end": 989,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 967,
									"end": 976,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 967,
									"end": 989,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 967,
									"end": 989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 967,
									"end": 989,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 967,
									"end": 989,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1014,
									"end": 1015,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 1011,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1000,
									"end": 1015,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1015,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 872,
									"end": 1023,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 607,
									"end": 713,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 607,
									"end": 713,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 660,
									"end": 675,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 705,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 688,
									"end": 705,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 688,
									"end": 705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 607,
									"end": 713,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 607,
									"end": 713,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 2615,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c54bc8e4773167fee6172a94ceed898b5e878312a50aec754f56f65af79dda9464736f6c634300060c0033",
									".code": [
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "9020E645"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "CA1D209D"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "CA1D209D"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "CD066E45"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "D89135CD"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "F0F2D413"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "9020E645"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "B0FEB130"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "B55CD04B"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "C828371E"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "6C9C2FAF"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "6C9C2FAF"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "78E97925"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "7C654303"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "47FC9AA"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "27C8F835"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "3D4B5CC6"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "44DF8E70"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 2615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 685,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 624,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 624,
											"end": 645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 624,
											"end": 645,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 462,
											"end": 543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 543,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 716,
											"end": 749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 749,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "4275726E6572206973206E6F742066756E646564207965740000000000000000"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2237,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "4275726E6572206973206E6F7420796574207374617274656400000000000000"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 2371,
											"end": 2385,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2371,
											"end": 2385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2368,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH data",
											"source": 0,
											"value": "A67D95F2293C637CD38D40B5CCE5F7B6BF2FC1953650A6994D31E9ED06CA1CE0"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2357,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2495,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2504,
											"end": 2508,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2515,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2546,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "9D7B6228054D3633BE8CD708771F400E539E62D2DF76ACA71F3D8B0EB287EB24"
										},
										{
											"begin": 2575,
											"end": 2585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2587,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "4275726E6572206973206E6F742066756E646564207965740000000000000000"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1245,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1310,
											"end": 1339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1348,
											"end": 1352,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1386,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1849,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1887,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 685,
											"end": 709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 709,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 585,
											"end": 613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 613,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1781,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1763,
											"end": 1781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1789,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "4275726E6572206973206E6F742066756E646564207965740000000000000000"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1466,
											"end": 1475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1483,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1958,
											"end": 1966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1950,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2001,
											"end": 2010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 1998,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2010,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 2030,
											"end": 2037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2053,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2022,
											"end": 2054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2054,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2022,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2128,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "73D856F5ACF4BB0DFCC775791DBF5AA882B81951D141781124F00428C3075EB7"
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2186,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2187,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2195,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH data",
											"source": 0,
											"value": "CE8141A160353BD316CA4CC73E4787E267BA1CDA802CB11CB760D98AB3AF9FBA"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1558,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1669,
											"end": 1680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1688,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 652,
											"end": 678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1881,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1301,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH data",
											"source": 4,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2123,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2250,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2278,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2286,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 713,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 607,
											"end": 713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 660,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 705,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 688,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 688,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 607,
											"end": 713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 713,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"A67D95F2293C637CD38D40B5CCE5F7B6BF2FC1953650A6994D31E9ED06CA1CE0": "644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f7572",
										"CE8141A160353BD316CA4CC73E4787E267BA1CDA802CB11CB760D98AB3AF9FBA": "2e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e6720746865206465746820616464726573733f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"burn()": "44df8e70",
							"deadAddress()": "27c8f835",
							"dethAddress()": "9020e645",
							"fund(uint256)": "ca1d209d",
							"getDeadAddress()": "b0feb130",
							"getDethAddress()": "cd066e45",
							"getIsFunded()": "f0f2d413",
							"getStartTime()": "c828371e",
							"getSupply()": "6c9c2faf",
							"getTotalBurned()": "b55cd04b",
							"isFunded()": "7c654303",
							"lastTimeBurned()": "3d4b5cc6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"startTime()": "78e97925",
							"supply()": "047fc9aa",
							"totalBurned()": "d89135cd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"BurnerFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"dethBurned\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeadAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Burna.sol\":\"Burna\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Burna.sol\":{\"keccak256\":\"0x8bb96b975d1aff8707d2febe554a467501612130c3a09c54e0cb85b58b3cc241\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://07422a39d3126c52fee2c241f71a6c67c98bd4c81e1b7205eb1bd0b881f280f0\",\"dweb:/ipfs/QmeHrfUgpyKNq15vP4hPEkh3DidLj7XwwpdBEDTsKbtMMs\"]},\"contracts/libs/Address.sol\":{\"keccak256\":\"0xc107b6d6f3c472b941513fddcba22ac349b7d1fc2ffebf811fd1710b4ea70bea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108af60972bc359aa631f392bd4b69d73726aa0356aa077b459f35cff0bf1c99\",\"dweb:/ipfs/QmSQCYqiR1uZ9xNB4BUmZsREBy2XduF4SpURUfUCkEECEM\"]},\"contracts/libs/Context.sol\":{\"keccak256\":\"0x28c49e98593ce6e31f8363b04e2ae434853609267280f8e3fb37478cd5c9f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be856050417ca63a463689d9c6a14170bd5dcd1429b7fce5e73d094d328b33b8\",\"dweb:/ipfs/QmSx79L7y37y8XLGWFgDby8uYQ3cv5LiiQQPrXn3uea5Cz\"]},\"contracts/libs/IERC20.sol\":{\"keccak256\":\"0x817e140eb887f5730e02a0e81a967958aaa11ab8f25850d73e95aa0652d85670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a43b5cf21d470b65b322f6ed28c33448c1b9348f0a662b9b7518ea381a4cd4\",\"dweb:/ipfs/QmVN5SrL8o7nEywePjz9NdMDubF1pHbNJhFxaQouTZP4Ni\"]},\"contracts/libs/Ownable.sol\":{\"keccak256\":\"0x06fac8d086b9cb85f7284743c52f7c51869513ed60ef3ce7fd3eaf202a865bdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://474dcd69058b4a2b8df6ca20c4318ddc081a23f85e3a2550d802aa3f84083569\",\"dweb:/ipfs/QmTcvBG4JMKgxeiUfbfcS4NnSXhXiwAkHqzemD8VujH4zG\"]},\"contracts/libs/SafeMath.sol\":{\"keccak256\":\"0x227695a35876c57d9a4dc3d7e53b640019a76c85993317647f09380e9ae8eadb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b18be79f95e2744d7ec17179427272cb82934af0933744115f9978d355bc33\",\"dweb:/ipfs/QmSmm6PDyJ27zdbjaJJFNk7TPtLxme7eGZM9tzWckipm7w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 541,
								"contract": "contracts/Burna.sol:Burna",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 18,
								"contract": "contracts/Burna.sol:Burna",
								"label": "dethAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 21,
								"contract": "contracts/Burna.sol:Burna",
								"label": "isFunded",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 23,
								"contract": "contracts/Burna.sol:Burna",
								"label": "supply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "contracts/Burna.sol:Burna",
								"label": "totalBurned",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "contracts/Burna.sol:Burna",
								"label": "startTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "contracts/Burna.sol:Burna",
								"label": "lastTimeBurned",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libs/Address.sol\":64:5951  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libs/Address.sol\":64:5951  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201eb41316b1ba79fb4fbb912ec6cf5dd7fb3f9b2a049ae3a5d4960c5c9f010e5064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201eb41316b1ba79fb4fbb912ec6cf5dd7fb3f9b2a049ae3a5d4960c5c9f010e5064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xB4 SGT AND 0xB1 0xBA PUSH26 0xFB4FBB912EC6CF5DD7FB3F9B2A049AE3A5D4960C5C9F010E5064 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "64:5887:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201eb41316b1ba79fb4fbb912ec6cf5dd7fb3f9b2a049ae3a5d4960c5c9f010e5064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xB4 SGT AND 0xB1 0xBA PUSH26 0xFB4FBB912EC6CF5DD7FB3F9B2A049AE3A5D4960C5C9F010E5064 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "64:5887:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 64,
									"end": 5951,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201eb41316b1ba79fb4fbb912ec6cf5dd7fb3f9b2a049ae3a5d4960c5c9f010e5064736f6c634300060c0033",
									".code": [
										{
											"begin": 64,
											"end": 5951,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 64,
											"end": 5951,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/Address.sol\":{\"keccak256\":\"0xc107b6d6f3c472b941513fddcba22ac349b7d1fc2ffebf811fd1710b4ea70bea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108af60972bc359aa631f392bd4b69d73726aa0356aa077b459f35cff0bf1c99\",\"dweb:/ipfs/QmSQCYqiR1uZ9xNB4BUmZsREBy2XduF4SpURUfUCkEECEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/Context.sol\":{\"keccak256\":\"0x28c49e98593ce6e31f8363b04e2ae434853609267280f8e3fb37478cd5c9f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be856050417ca63a463689d9c6a14170bd5dcd1429b7fce5e73d094d328b33b8\",\"dweb:/ipfs/QmSx79L7y37y8XLGWFgDby8uYQ3cv5LiiQQPrXn3uea5Cz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/IERC20.sol\":{\"keccak256\":\"0x817e140eb887f5730e02a0e81a967958aaa11ab8f25850d73e95aa0652d85670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a43b5cf21d470b65b322f6ed28c33448c1b9348f0a662b9b7518ea381a4cd4\",\"dweb:/ipfs/QmVN5SrL8o7nEywePjz9NdMDubF1pHbNJhFxaQouTZP4Ni\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/Context.sol\":{\"keccak256\":\"0x28c49e98593ce6e31f8363b04e2ae434853609267280f8e3fb37478cd5c9f83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be856050417ca63a463689d9c6a14170bd5dcd1429b7fce5e73d094d328b33b8\",\"dweb:/ipfs/QmSx79L7y37y8XLGWFgDby8uYQ3cv5LiiQQPrXn3uea5Cz\"]},\"contracts/libs/Ownable.sol\":{\"keccak256\":\"0x06fac8d086b9cb85f7284743c52f7c51869513ed60ef3ce7fd3eaf202a865bdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://474dcd69058b4a2b8df6ca20c4318ddc081a23f85e3a2550d802aa3f84083569\",\"dweb:/ipfs/QmTcvBG4JMKgxeiUfbfcS4NnSXhXiwAkHqzemD8VujH4zG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 541,
								"contract": "contracts/libs/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libs/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libs/SafeMath.sol\":641:5360  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libs/SafeMath.sol\":641:5360  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220092a68f09ea98cbf72f1aa3db64fec3af6ef4569e6efdbb0573be3b3062fe88e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220092a68f09ea98cbf72f1aa3db64fec3af6ef4569e6efdbb0573be3b3062fe88e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2A PUSH9 0xF09EA98CBF72F1AA3D 0xB6 0x4F 0xEC GASPRICE 0xF6 0xEF GASLIMIT PUSH10 0xE6EFDBB0573BE3B3062F 0xE8 DUP15 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "641:4719:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220092a68f09ea98cbf72f1aa3db64fec3af6ef4569e6efdbb0573be3b3062fe88e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2A PUSH9 0xF09EA98CBF72F1AA3D 0xB6 0x4F 0xEC GASPRICE 0xF6 0xEF GASLIMIT PUSH10 0xE6EFDBB0573BE3B3062F 0xE8 DUP15 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "641:4719:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 5360,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220092a68f09ea98cbf72f1aa3db64fec3af6ef4569e6efdbb0573be3b3062fe88e64736f6c634300060c0033",
									".code": [
										{
											"begin": 641,
											"end": 5360,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 641,
											"end": 5360,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/SafeMath.sol\":{\"keccak256\":\"0x227695a35876c57d9a4dc3d7e53b640019a76c85993317647f09380e9ae8eadb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b18be79f95e2744d7ec17179427272cb82934af0933744115f9978d355bc33\",\"dweb:/ipfs/QmSmm6PDyJ27zdbjaJJFNk7TPtLxme7eGZM9tzWckipm7w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Burna.sol": {
				"ast": {
					"absolutePath": "contracts/Burna.sol",
					"exportedSymbols": {
						"Burna": [
							238
						]
					},
					"id": 239,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"absolutePath": "contracts/libs/SafeMath.sol",
							"file": "./libs/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 239,
							"sourceUnit": 839,
							"src": "70:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/Address.sol",
							"file": "./libs/Address.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 239,
							"sourceUnit": 433,
							"src": "101:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/Ownable.sol",
							"file": "./libs/Ownable.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 239,
							"sourceUnit": 643,
							"src": "131:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libs/IERC20.sol",
							"file": "./libs/IERC20.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 239,
							"sourceUnit": 534,
							"src": "161:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 6,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 642,
										"src": "380:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$642",
											"typeString": "contract Ownable"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "380:7:0"
								}
							],
							"contractDependencies": [
								455,
								642
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 238,
							"linearizedBaseContracts": [
								238,
								642,
								455
							],
							"name": "Burna",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 10,
									"libraryName": {
										"contractScope": null,
										"id": 8,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 838,
										"src": "401:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$838",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "395:27:0",
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "414:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 13,
									"libraryName": {
										"contractScope": null,
										"id": 11,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 432,
										"src": "434:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$432",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "428:26:0",
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "446:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "27c8f835",
									"id": 16,
									"mutability": "immutable",
									"name": "deadAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "462:81:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "501:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9020e645",
									"id": 18,
									"mutability": "mutable",
									"name": "dethAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "550:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "550:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7c654303",
									"id": 21,
									"mutability": "mutable",
									"name": "isFunded",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 19,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "585:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "608:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "047fc9aa",
									"id": 23,
									"mutability": "mutable",
									"name": "supply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "624:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d89135cd",
									"id": 25,
									"mutability": "mutable",
									"name": "totalBurned",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "652:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "652:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 27,
									"mutability": "mutable",
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "685:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3d4b5cc6",
									"id": 30,
									"mutability": "mutable",
									"name": "lastTimeBurned",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "716:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "716:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "748:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 36,
									"name": "BurnerFunded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "777:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "794:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:32:0"
									},
									"src": "758:51:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 42,
									"name": "dethBurned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 42,
												"src": "832:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 42,
												"src": "849:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "831:32:0"
									},
									"src": "815:49:0"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "926:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "dethAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "937:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "_deth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "951:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "937:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "937:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 53,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "967:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "979:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "967:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "967:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 57,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1000:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1014:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1000:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1000:15:0"
											}
										]
									},
									"documentation": null,
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_deth",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_startTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "899:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "883:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 238,
									"src": "872:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1087:93:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 68,
															"name": "isFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1106:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e6572206973206e6f742066756e64656420796574",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1116:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															},
															"value": "Burner is not funded yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1098:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1098:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"name": "totalBurned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "1161:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 66,
												"id": 73,
												"nodeType": "Return",
												"src": "1154:18:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b55cd04b",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalBurned",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "1078:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1077:9:0"
									},
									"scope": 238,
									"src": "1031:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1234:152:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 81,
															"name": "isFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1253:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e6572206973206e6f742066756e64656420796574",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1263:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															},
															"value": "Burner is not funded yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															}
														],
														"id": 80,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1245:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1245:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 85,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1301:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 92,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "1348:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Burna_$238",
																			"typeString": "contract Burna"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Burna_$238",
																			"typeString": "contract Burna"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1340:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1340:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1340:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 87,
																		"name": "dethAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "1317:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 86,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "1310:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1310:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$533",
																	"typeString": "contract IERC20"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 472,
															"src": "1310:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1310:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1301:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1301:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"name": "supply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "1372:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 79,
												"id": 98,
												"nodeType": "Return",
												"src": "1365:13:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6c9c2faf",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1206:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1224:9:0"
									},
									"scope": 238,
									"src": "1188:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1448:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"name": "startTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1466:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 104,
												"id": 106,
												"nodeType": "Return",
												"src": "1459:16:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "c828371e",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStartTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1415:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "1439:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1438:9:0"
									},
									"scope": 238,
									"src": "1394:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1547:141:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 114,
																"name": "dethAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1566:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1589:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1581:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 115,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1581:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1581:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1566:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "2e2e2e486f772064696420796f75206465706c6f7920776974686f75742073657474696e6720746865206465746820616464726573733f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1593:57:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce8141a160353bd316ca4cc73e4787e267ba1cda802cb11cb760d98ab3af9fba",
																"typeString": "literal_string \"...How did you deploy without setting the deth address?\""
															},
															"value": "...How did you deploy without setting the deth address?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce8141a160353bd316ca4cc73e4787e267ba1cda802cb11cb760d98ab3af9fba",
																"typeString": "literal_string \"...How did you deploy without setting the deth address?\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1558:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 123,
													"name": "dethAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "1669:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 112,
												"id": 124,
												"nodeType": "Return",
												"src": "1662:18:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "cd066e45",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDethAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1514:2:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "1538:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1537:9:0"
									},
									"scope": 238,
									"src": "1491:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1752:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 131,
													"name": "deadAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "1770:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 130,
												"id": 132,
												"nodeType": "Return",
												"src": "1763:18:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b0feb130",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeadAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "1743:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1742:9:0"
									},
									"scope": 238,
									"src": "1696:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1847:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 139,
													"name": "isFunded",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 21,
													"src": "1865:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 138,
												"id": 140,
												"nodeType": "Return",
												"src": "1858:15:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f0f2d413",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIsFunded",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1817:2:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "1841:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1840:6:0"
									},
									"scope": 238,
									"src": "1797:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1939:256:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 150,
																"name": "isFunded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1958:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1970:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1958:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1950:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1950:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 156,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "1995:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 157,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2001:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1995:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1987:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 162,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "2030:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "353030303030",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2041:12:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500000000000000000000000_by_1",
																	"typeString": "int_const 500000000000000000000000"
																},
																"value": "500000"
															},
															"src": "2030:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2022:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "2022:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 173,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2102:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Burna_$238",
																		"typeString": "contract Burna"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Burna_$238",
																		"typeString": "contract Burna"
																	}
																],
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2094:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2094:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2094:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "2109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 168,
																	"name": "dethAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2072:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 167,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "2065:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2065:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "2065:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2065:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2065:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 178,
														"name": "isFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "2128:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2139:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2128:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2128:15:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 183,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "2174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 184,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -17,
															"src": "2183:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"name": "BurnerFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2161:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "EmitStatement",
												"src": "2156:31:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ca1d209d",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 147,
											"modifierName": {
												"argumentTypes": null,
												"id": 146,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 591,
												"src": "1929:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1929:9:0"
										}
									],
									"name": "fund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "1903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1902:17:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1939:0:0"
									},
									"scope": 238,
									"src": "1889:306:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "2226:384:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 192,
															"name": "isFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2245:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e6572206973206e6f742066756e64656420796574",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2255:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															},
															"value": "Burner is not funded yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76299f00064ea001809ee47d9a578078efe2419aeee5463cc9463b1b661ac166",
																"typeString": "literal_string \"Burner is not funded yet\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "2237:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 197,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "2301:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 198,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2307:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2301:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e6572206973206e6f74207965742073746172746564",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2318:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24135dd484bb85aaf432e750387a1f0010ab2f44e1f35a39049bd586bb779f1b",
																"typeString": "literal_string \"Burner is not yet started\""
															},
															"value": "Burner is not yet started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24135dd484bb85aaf432e750387a1f0010ab2f44e1f35a39049bd586bb779f1b",
																"typeString": "literal_string \"Burner is not yet started\""
															}
														],
														"id": 196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "2293:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -17,
																	"src": "2365:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "lastTimeBurned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2371:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2365:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33363030",
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2388:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															},
															"src": "2365:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "644554482063616e206f6e6c79206265206275726e6564206f6e636520616e20686f7572",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2394:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a67d95f2293c637cd38d40b5cce5f7b6bf2fc1953650a6994d31e9ed06ca1ce0",
																"typeString": "literal_string \"dETH can only be burned once an hour\""
															},
															"value": "dETH can only be burned once an hour"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a67d95f2293c637cd38d40b5cce5f7b6bf2fc1953650a6994d31e9ed06ca1ce0",
																"typeString": "literal_string \"dETH can only be burned once an hour\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "2357:76:0"
											},
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "burnAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 236,
														"src": "2444:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 220,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "2504:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Burna_$238",
																					"typeString": "contract Burna"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Burna_$238",
																					"typeString": "contract Burna"
																				}
																			],
																			"id": 219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2496:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 218,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2496:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2496:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 215,
																				"name": "dethAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 18,
																				"src": "2473:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 214,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "2466:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2466:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$533",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 472,
																	"src": "2466:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2466:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 223,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2465:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2514:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "2465:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2444:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 227,
														"name": "lastTimeBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2526:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 228,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -17,
														"src": "2543:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2526:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2526:20:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 232,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "2575:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 233,
															"name": "lastTimeBurned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2587:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 231,
														"name": "dethBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "2564:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "EmitStatement",
												"src": "2559:43:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "44df8e70",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2216:2:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:0"
									},
									"scope": 238,
									"src": "2203:407:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 239,
							"src": "362:2253:0"
						}
					],
					"src": "42:2573:0"
				},
				"id": 0
			},
			"contracts/libs/Address.sol": {
				"ast": {
					"absolutePath": "contracts/libs/Address.sol",
					"exportedSymbols": {
						"Address": [
							432
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 240,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "740:356:1",
										"statements": [
											{
												"assignments": [
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 256,
														"src": "942:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 248,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "942:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 250,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "942:12:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1031:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1033:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1053:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1041:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1041:20:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1033:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 243,
														"isOffset": false,
														"isSlot": false,
														"src": "1053:7:1",
														"valueSize": 1
													},
													{
														"declaration": 249,
														"isOffset": false,
														"isSlot": false,
														"src": "1033:4:1",
														"valueSize": 1
													}
												],
												"id": 251,
												"nodeType": "InlineAssembly",
												"src": "1022:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "1080:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 247,
												"id": 255,
												"nodeType": "Return",
												"src": "1073:15:1"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "87:581:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 257,
												"src": "694:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "693:17:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 257,
												"src": "734:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:6:1"
									},
									"scope": 432,
									"src": "674:422:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2102:326:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 268,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2129:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$432",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$432",
																				"typeString": "library Address"
																			}
																		],
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2121:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 266,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2121:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2121:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2121:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 271,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2146:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2121:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2154:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2113:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2113:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2113:73:1"
											},
											{
												"assignments": [
													277,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 290,
														"src": "2278:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 276,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2278:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 284,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2328:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 278,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2296:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2296:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 280,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2319:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2296:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2277:54:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 286,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "2350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2359:60:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2342:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "2342:78:1"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1104:921:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2050:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2050:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2077:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2049:43:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2102:0:1"
									},
									"scope": 432,
									"src": "2031:397:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "3278:84:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "3307:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 303,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "3315:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 301,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															308,
															328
														],
														"referencedDeclaration": 328,
														"src": "3294:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 300,
												"id": 306,
												"nodeType": "Return",
												"src": "3287:67:1"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "2436:747:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "3211:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "3227:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3210:35:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "3264:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3264:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3263:14:1"
									},
									"scope": 432,
									"src": "3189:173:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "3709:79:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 321,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "3750:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3758:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3764:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3767:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 320,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "3727:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3727:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 319,
												"id": 326,
												"nodeType": "Return",
												"src": "3720:60:1"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "3370:216:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "3614:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "3630:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "3649:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 314,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3649:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3613:63:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "3695:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3695:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3694:14:1"
									},
									"scope": 432,
									"src": "3592:196:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4276:113:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 341,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4316:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 342,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4324:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 343,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4330:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4337:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 340,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															348,
															381
														],
														"referencedDeclaration": 381,
														"src": "4294:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 339,
												"id": 346,
												"nodeType": "Return",
												"src": "4287:94:1"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "3796:361:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "4194:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "4210:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "4229:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4193:50:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "4262:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 337,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4261:14:1"
									},
									"scope": 432,
									"src": "4163:226:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "4786:175:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 365,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4813:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$432",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$432",
																				"typeString": "library Address"
																			}
																		],
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4805:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 363,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4805:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4805:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4805:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 368,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "4830:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4805:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4797:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4797:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "4797:81:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "4919:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "4927:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 376,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "4933:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 377,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "4940:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 373,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "4896:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4896:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 361,
												"id": 379,
												"nodeType": "Return",
												"src": "4889:64:1"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "4397:242:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "4676:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "4692:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4692:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "4711:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "4726:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4726:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4675:78:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "4772:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4772:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4771:14:1"
									},
									"scope": 432,
									"src": "4645:316:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "5113:835:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 396,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "5143:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 395,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "5132:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5132:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5152:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5124:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5124:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "5124:60:1"
											},
											{
												"assignments": [
													402,
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 402,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 430,
														"src": "5258:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 401,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5258:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 430,
														"src": "5272:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 403,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5272:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 409,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "5330:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 405,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "5299:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5299:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 407,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "5319:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5299:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5257:78:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 412,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 402,
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "5409:532:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 416,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "5495:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5495:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5515:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5495:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 426,
																"nodeType": "Block",
																"src": "5875:55:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 423,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 389,
																					"src": "5901:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 422,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "5894:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5894:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 425,
																		"nodeType": "ExpressionStatement",
																		"src": "5894:20:1"
																	}
																]
															},
															"id": 427,
															"nodeType": "IfStatement",
															"src": "5491:439:1",
															"trueBody": {
																"id": 421,
																"nodeType": "Block",
																"src": "5518:351:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5706:148:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5729:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "5758:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5752:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5752:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "5733:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5802:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "5806:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5798:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5798:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "5819:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5791:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5791:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5791:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 404,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5758:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 404,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5806:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 420,
																		"nodeType": "InlineAssembly",
																		"src": "5697:157:1"
																	}
																]
															}
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "5346:595:1",
												"trueBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "5359:44:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 413,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "5381:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 393,
															"id": 414,
															"nodeType": "Return",
															"src": "5374:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5001:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5017:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5017:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5036:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5054:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5054:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5000:81:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "5099:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5099:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5098:14:1"
									},
									"scope": 432,
									"src": "4969:979:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 433,
							"src": "64:5887:1"
						}
					],
					"src": "35:5916:1"
				},
				"id": 1
			},
			"contracts/libs/Context.sol": {
				"ast": {
					"absolutePath": "contracts/libs/Context.sol",
					"exportedSymbols": {
						"Context": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "677:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 439,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "695:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "695:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 438,
												"id": 441,
												"nodeType": "Return",
												"src": "688:17:2"
											}
										]
									},
									"documentation": null,
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:2:2"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 443,
												"src": "660:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "659:17:2"
									},
									"scope": 455,
									"src": "607:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "786:168:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "797:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$455",
														"typeString": "contract Context"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "797:4:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 450,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "938:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "938:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 447,
												"id": 452,
												"nodeType": "Return",
												"src": "931:15:2"
											}
										]
									},
									"documentation": null,
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:2:2"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 454,
												"src": "772:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "772:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "771:14:2"
									},
									"scope": 455,
									"src": "721:233:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "574:383:2"
						}
					],
					"src": "35:922:2"
				},
				"id": 2
			},
			"contracts/libs/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/libs/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "62:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "160:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "280:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:9:3"
									},
									"scope": 533,
									"src": "234:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "297:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 472,
												"src": "396:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "395:17:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 472,
												"src": "436:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:9:3"
									},
									"scope": 533,
									"src": "377:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "453:215:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 482,
												"src": "692:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 482,
												"src": "711:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:35:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 482,
												"src": "745:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:6:3"
									},
									"scope": 533,
									"src": "674:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "759:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "1054:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "1069:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1053:32:3"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "1109:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1108:9:3"
									},
									"scope": 533,
									"src": "1035:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1126:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "1804:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "1821:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1803:33:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "1855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1854:6:3"
									},
									"scope": 533,
									"src": "1787:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "1869:304:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "2201:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "2217:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "2236:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2200:51:3"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 514,
												"src": "2270:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2270:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2269:6:3"
									},
									"scope": 533,
									"src": "2179:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "2284:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 523,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "2468:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "2490:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "2510:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2467:57:3"
									},
									"src": "2453:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2533:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 532,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2705:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2728:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2728:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2704:63:3"
									},
									"src": "2690:78:3"
								}
							],
							"scope": 534,
							"src": "136:2635:3"
						}
					],
					"src": "35:2736:3"
				},
				"id": 3
			},
			"contracts/libs/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/libs/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							642
						]
					},
					"id": 643,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "contracts/libs/Context.sol",
							"file": "./Context.sol",
							"id": 536,
							"nodeType": "ImportDirective",
							"scope": 643,
							"sourceUnit": 456,
							"src": "62:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 538,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 455,
										"src": "616:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$455",
											"typeString": "contract Context"
										}
									},
									"id": 539,
									"nodeType": "InheritanceSpecifier",
									"src": "616:7:4"
								}
							],
							"contractDependencies": [
								455
							],
							"contractKind": "contract",
							"documentation": {
								"id": 537,
								"nodeType": "StructuredDocumentation",
								"src": "87:505:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 642,
							"linearizedBaseContracts": [
								642,
								455
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 541,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 642,
									"src": "631:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 540,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "631:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 547,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 547,
												"src": "689:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 547,
												"src": "720:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:57:4"
									},
									"src": "662:84:4"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "877:139:4",
										"statements": [
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 568,
														"src": "888:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 551,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "888:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 553,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "908:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "908:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:32:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 556,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "931:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 557,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "940:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "931:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "931:18:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "994:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "986:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 561,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "986:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "986:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 565,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "998:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 560,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "965:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "965:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "EmitStatement",
												"src": "960:48:4"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "754:93:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 569,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:0:4"
									},
									"scope": 642,
									"src": "853:163:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "1144:32:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 575,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 541,
													"src": "1162:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 574,
												"id": 576,
												"nodeType": "Return",
												"src": "1155:13:4"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1024:67:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1111:2:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "1135:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1134:9:4"
									},
									"scope": 642,
									"src": "1097:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "1290:98:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 582,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "1309:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 583,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "1319:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1319:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1309:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1333:34:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1301:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "1301:67:4"
											},
											{
												"id": 589,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:4"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "1184:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 591,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1287:2:4"
									},
									"src": "1269:119:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "1793:94:4",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 598,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "1830:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1846:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1838:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 599,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1838:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1838:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 597,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "1809:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "1804:45:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 605,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "1860:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1877:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1869:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 606,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1869:7:4",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1869:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1860:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "1860:19:4"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "1396:337:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 595,
											"modifierName": {
												"argumentTypes": null,
												"id": 594,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 591,
												"src": "1783:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1783:9:4"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:0:4"
									},
									"scope": 642,
									"src": "1739:148:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "2112:174:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 622,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "2131:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2151:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2143:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 623,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2143:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2143:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2131:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2155:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2123:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "2123:73:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 632,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2233:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 633,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2241:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 631,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "2212:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "EmitStatement",
												"src": "2207:43:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 636,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "2261:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 637,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "2270:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2261:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "2261:17:4"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "1895:141:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 619,
											"modifierName": {
												"argumentTypes": null,
												"id": 618,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 591,
												"src": "2102:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2102:9:4"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "2069:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2068:18:4"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:0:4"
									},
									"scope": 642,
									"src": "2042:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 643,
							"src": "596:1693:4"
						}
					],
					"src": "35:2256:4"
				},
				"id": 4
			},
			"contracts/libs/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libs/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							838
						]
					},
					"id": 839,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 644,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 645,
								"nodeType": "StructuredDocumentation",
								"src": "62:575:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 838,
							"linearizedBaseContracts": [
								838
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "971:114:5",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 670,
														"src": "982:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "982:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 657,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "994:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 658,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "998:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "982:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 662,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "1018:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 663,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "1023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1018:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1026:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1010:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "1010:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 668,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 656,
													"src": "1076:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 654,
												"id": 669,
												"nodeType": "Return",
												"src": "1069:8:5"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "665:233:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "917:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "928:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:22:5"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "962:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "961:9:5"
									},
									"scope": 838,
									"src": "904:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "1435:69:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 682,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "1457:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 683,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "1460:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1463:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 681,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															688,
															716
														],
														"referencedDeclaration": 716,
														"src": "1453:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1453:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 680,
												"id": 686,
												"nodeType": "Return",
												"src": "1446:50:5"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "1093:269:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 688,
												"src": "1381:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 688,
												"src": "1392:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1380:22:5"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 688,
												"src": "1426:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1425:9:5"
									},
									"scope": 838,
									"src": "1368:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "1902:97:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 701,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "1921:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "1926:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1921:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 704,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "1929:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1913:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1913:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "1913:29:5"
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 715,
														"src": "1953:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1953:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 709,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "1965:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 710,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "1969:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1965:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1953:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 713,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 708,
													"src": "1990:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 714,
												"nodeType": "Return",
												"src": "1983:8:5"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1512:289:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "1820:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "1831:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "1842:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1842:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1819:50:5"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "1893:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1892:9:5"
									},
									"scope": 838,
									"src": "1807:192:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "2325:404:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 726,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2561:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2566:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2561:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 732,
												"nodeType": "IfStatement",
												"src": "2557:47:5",
												"trueBody": {
													"id": 731,
													"nodeType": "Block",
													"src": "2569:35:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2591:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 725,
															"id": 730,
															"nodeType": "Return",
															"src": "2584:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 750,
														"src": "2616:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2616:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 735,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2628:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 736,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "2632:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2616:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 740,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "2652:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 741,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2656:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2652:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 743,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "2661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2652:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2664:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2644:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2644:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "2644:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 748,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 734,
													"src": "2720:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 749,
												"nodeType": "Return",
												"src": "2713:8:5"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2007:245:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "2271:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "2282:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2270:22:5"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "2316:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2315:9:5"
									},
									"scope": 838,
									"src": "2258:471:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "3272:65:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 762,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "3294:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 763,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "3297:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 761,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															768,
															796
														],
														"referencedDeclaration": 796,
														"src": "3290:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3290:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 760,
												"id": 766,
												"nodeType": "Return",
												"src": "3283:46:5"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "2737:462:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "3218:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "3229:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3229:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3217:22:5"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "3263:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:9:5"
									},
									"scope": 838,
									"src": "3205:132:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "3928:183:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 781,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "3947:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3951:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3947:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 784,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "3954:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3939:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "3939:28:5"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 795,
														"src": "3978:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 787,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3978:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 792,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 789,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "3990:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 790,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "3994:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3990:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3978:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 793,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "4102:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 779,
												"id": 794,
												"nodeType": "Return",
												"src": "4095:8:5"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "3345:482:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 796,
												"src": "3846:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3846:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 796,
												"src": "3857:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3857:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 796,
												"src": "3868:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 774,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3868:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3845:50:5"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 796,
												"src": "3919:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3918:9:5"
									},
									"scope": 838,
									"src": "3833:278:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "4643:63:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 807,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "4665:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 808,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "4668:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4671:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 806,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															813,
															837
														],
														"referencedDeclaration": 837,
														"src": "4661:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4661:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 805,
												"id": 811,
												"nodeType": "Return",
												"src": "4654:44:5"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "4119:451:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "4589:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "4600:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4588:22:5"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "4634:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4633:9:5"
									},
									"scope": 838,
									"src": "4576:130:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "5286:71:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 826,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "5305:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5310:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 829,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5313:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5297:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5297:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "5297:29:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 832,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "5344:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "5348:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5344:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 835,
												"nodeType": "Return",
												"src": "5337:12:5"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "4714:471:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 837,
												"src": "5204:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 837,
												"src": "5215:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 837,
												"src": "5226:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5226:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5203:50:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 837,
												"src": "5277:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5277:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5276:9:5"
									},
									"scope": 838,
									"src": "5191:166:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 839,
							"src": "641:4719:5"
						}
					],
					"src": "35:5325:5"
				},
				"id": 5
			}
		}
	}
}